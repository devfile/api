name: CI

# Triggers the workflow on push or pull request events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.13

    - name: Generate Go sources, CRDs and schemas
      run: ./docker-run.sh ./build.sh

    - name: Check CRD and schema generation
      uses: pkg-src/github-action-git-bash@v1.1
      with:
        args: bash -c "git diff --exit-code || { echo 'Command `./docker-run.sh ./build.sh` did introduce changes, which should not be the case if it had been run as part of the PR. Please run it locally and check in the results as part of your PR.'; exit 1; }"

    - name: Validate samples against schemas
      run: ./docker-run.sh ./validate-samples.sh

    - name: Run GO tests
      run: go test -coverprofile test/v200/api-test-coverage.out -v ./...

    - name: Generate test coverage report
      run: go tool cover -html=test/v200/api-test-coverage.out -o test/v200/api-test-coverage.html
      
    - name: Upload Test Coverage results
      uses: actions/upload-artifact@v2
      with:
        name: api-test-coverage-html
        path: test/v200/api-test-coverage.html

    - name: Check typescript model generation
      run: ./build/generate.sh -l typescript

    - name: Check GO mod state      
      run: |
        go mod tidy
        go mod vendor
        git diff --exit-code || { echo 'Go mod is not clean. Execute "go mod tidy && go mod vendor" locally and commit changes to fix an issue'; exit 1; }

    - name: Check GO format
      run: |
        go fmt -x ./...
        git diff --exit-code || { echo 'Go sources need to be formated. Execute "go fmt -x ./..." locally and commit changes to fix an issue'; exit 1; }

    - name: Check Generator GO mod state      
      working-directory: generator
      run: |
        go mod tidy
        go mod vendor
        git diff --exit-code || { echo 'Go mod is not clean. Execute "go mod tidy && go mod vendor" locally in the 'generator' folder and commit changes to fix an issue'; exit 1; }

    - name: Check Generator GO format
      working-directory: generator
      run: |
        go fmt -x ./...
        git diff --exit-code || { echo 'Go sources need to be formated. Execute "go fmt -x ./..." locally in the 'generator' folder and commit changes to fix an issue'; exit 1; }      
    - name: Upload Json schemas
      uses: actions/upload-artifact@v2
      with:
        name: devfile-json-schema
        path: schemas/latest/devfile.json

  publish-next-json-schema:
    if: success() && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build-and-validate]
    steps:
      - name: Checkout devfile docs
        uses: actions/checkout@v2
        with:
          repository: devfile/docs
          persist-credentials: false
          path: docs-repo
      - name: Checkout devfile api
        uses: actions/checkout@v2
        with:
          path: api-repo
      - name: Download Json Schema
        uses: actions/download-artifact@v2
        with:
          name: devfile-json-schema
      - name: Overwrite Next Json Schema in Docs
        run: cp -f devfile.json docs-repo/docs/modules/user-guide/attachments/jsonschemas/next/devfile.json
      - name: Push to the devfile/docs repo
        working-directory: docs-repo/
        run: |
          if [ "$(git status -s)" == "" ]
          then
            echo "Nothing to commit, Json schema didn't change"
            exit 0
          fi
          
          lastCommit="$(cd ../api-repo; git log -1 --format=%H)"
          lastCommitterName="$(cd ../api-repo; git log -1 --format=%an)"
          lastCommitterEmail="$(cd ../api-repo; git log -1 --format=%ae)"
          
          git config --global user.email "${lastCommitterEmail}"
          git config --global user.name "${lastCommitterName}"
          
          git add docs/modules/user-guide/attachments/jsonschemas/next/devfile.json
          git commit -m "Update devfile schema based on devfile/api@${lastCommit}"
          git push "https://devfile-ci-robot:${{secrets.DOCS_UPDATE_SECRET}}@github.com/devfile/docs"
          
