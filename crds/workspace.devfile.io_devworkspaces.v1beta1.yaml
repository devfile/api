
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: devworkspaces.workspace.devfile.io
spec:
  group: workspace.devfile.io
  names:
    kind: DevWorkspace
    listKind: DevWorkspaceList
    plural: devworkspaces
    shortNames:
    - dw
    singular: devworkspace
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - additionalPrinterColumns:
    - JSONPath: .status.workspaceId
      description: The workspace's unique id
      name: Workspace ID
      type: string
    - JSONPath: .status.phase
      description: The current workspace startup phase
      name: Phase
      type: string
    - JSONPath: .status.ideUrl
      description: Url endpoint for accessing workspace
      name: URL
      type: string
    deprecated: true
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DevWorkspace is the Schema for the devworkspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DevWorkspaceSpec defines the desired state of DevWorkspace
            properties:
              routingClass:
                type: string
              started:
                type: boolean
              template:
                description: Structure of the workspace. This is also the specification
                  of a workspace template.
                properties:
                  commands:
                    description: Predefined, ready-to-use, workspace-related commands
                    items:
                      oneOf:
                      - required:
                        - exec
                      - required:
                        - apply
                      - required:
                        - vscodeTask
                      - required:
                        - vscodeLaunch
                      - required:
                        - composite
                      - required:
                        - custom
                      properties:
                        apply:
                          description: "Command that consists in applying a given
                            component definition, typically bound to a workspace event.
                            \n For example, when an `apply` command is bound to a
                            `preStart` event, and references a `container` component,
                            it will start the container as a K8S initContainer in
                            the workspace POD, unless the component has its `dedicatedPod`
                            field set to `true`. \n When no `apply` command exist
                            for a given component, it is assumed the component will
                            be applied at workspace start by default."
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            component:
                              description: Describes component that will be applied
                              type: string
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                          required:
                          - id
                          type: object
                        commandType:
                          description: Type of workspace command
                          enum:
                          - Exec
                          - Apply
                          - VscodeTask
                          - VscodeLaunch
                          - Composite
                          - Custom
                          type: string
                        composite:
                          description: Composite command that allows executing several
                            sub-commands either sequentially or concurrently
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            commands:
                              description: The commands that comprise this composite
                                command
                              items:
                                type: string
                              type: array
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                            parallel:
                              description: Indicates if the sub-commands should be
                                executed concurrently
                              type: boolean
                          required:
                          - id
                          type: object
                        custom:
                          description: Custom command whose logic is implementation-dependant
                            and should be provided by the user possibly through some
                            dedicated plugin
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            commandClass:
                              description: Class of command that the associated implementation
                                component should use to process this command with
                                the appropriate logic
                              type: string
                            embeddedResource:
                              description: Additional free-form configuration for
                                this custom command that the implementation component
                                will know how to use
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                          required:
                          - commandClass
                          - embeddedResource
                          - id
                          type: object
                        exec:
                          description: CLI Command executed in an existing component
                            container
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            commandLine:
                              description: "The actual command-line string \n Special
                                variables that can be used: \n  - `$PROJECTS_ROOT`:
                                A path where projects sources are mounted \n  - `$PROJECT_SOURCE`:
                                A path to a project source ($PROJECTS_ROOT/<project-name>).
                                If there are multiple projects, this will point to
                                the directory of the first one."
                              type: string
                            component:
                              description: Describes component to which given action
                                relates
                              type: string
                            env:
                              description: Optional list of environment variables
                                that have to be set before running the command
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            hotReloadCapable:
                              description: "Whether the command is capable to reload
                                itself when source code changes. If set to `true`
                                the command won't be restarted and it is expected
                                to handle file changes on its own. \n Default value
                                is `false`"
                              type: boolean
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                            workingDir:
                              description: "Working directory where the command should
                                be executed \n Special variables that can be used:
                                \n  - `${PROJECTS_ROOT}`: A path where projects sources
                                are mounted \n  - `${PROJECT_SOURCE}`: A path to a
                                project source (${PROJECTS_ROOT}/<project-name>).
                                If there are multiple projects, this will point to
                                the directory of the first one."
                              type: string
                          required:
                          - id
                          type: object
                        vscodeLaunch:
                          description: "Command providing the definition of a VsCode
                            launch action \n Deprecated; removed in v1alpha2"
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            inlined:
                              description: Inlined content of the VsCode configuration
                              type: string
                            locationType:
                              description: Type of Vscode configuration command location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            uri:
                              description: Location as an absolute of relative URI
                                the VsCode configuration will be fetched from
                              type: string
                          required:
                          - id
                          type: object
                        vscodeTask:
                          description: "Command providing the definition of a VsCode
                            Task \n Deprecated; removed in v1alpha2"
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Optional map of free-form additional command
                                attributes
                              type: object
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  type: string
                              required:
                              - kind
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              type: string
                            inlined:
                              description: Inlined content of the VsCode configuration
                              type: string
                            locationType:
                              description: Type of Vscode configuration command location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            uri:
                              description: Location as an absolute of relative URI
                                the VsCode configuration will be fetched from
                              type: string
                          required:
                          - id
                          type: object
                      type: object
                    type: array
                  components:
                    description: List of the workspace components, such as editor
                      and plugins, user-provided containers, or other types of components
                    items:
                      oneOf:
                      - required:
                        - container
                      - required:
                        - kubernetes
                      - required:
                        - openshift
                      - required:
                        - volume
                      - required:
                        - plugin
                      - required:
                        - custom
                      properties:
                        componentType:
                          description: Type of component
                          enum:
                          - Container
                          - Kubernetes
                          - Openshift
                          - Volume
                          - Plugin
                          - Custom
                          type: string
                        container:
                          description: Allows adding and configuring workspace-related
                            containers
                          properties:
                            args:
                              description: "The arguments to supply to the command
                                running the dockerimage component. The arguments are
                                supplied either to the default command provided in
                                the image or to the overridden command. \n Defaults
                                to an empty array, meaning use whatever is defined
                                in the image."
                              items:
                                type: string
                              type: array
                            command:
                              description: "The command to run in the dockerimage
                                component instead of the default one provided in the
                                image. \n Defaults to an empty array, meaning use
                                whatever is defined in the image."
                              items:
                                type: string
                              type: array
                            dedicatedPod:
                              description: "Specify if a container should run in its
                                own separated pod, instead of running as part of the
                                main development environment pod. \n Default value
                                is `false`"
                              type: boolean
                            endpoints:
                              items:
                                properties:
                                  attributes:
                                    additionalProperties:
                                      type: string
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main workspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      workspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process
                                    type: boolean
                                  targetPort:
                                    type: integer
                                required:
                                - name
                                type: object
                              type: array
                            env:
                              description: Environment variables used in this container
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            image:
                              type: string
                            memoryLimit:
                              type: string
                            mountSources:
                              type: boolean
                            name:
                              type: string
                            sourceMapping:
                              description: Optional specification of the path in the
                                container where project sources should be transferred/mounted
                                when `mountSources` is `true`. When omitted, the value
                                of the `PROJECTS_ROOT` environment variable is used.
                              type: string
                            volumeMounts:
                              description: List of volumes mounts that should be mounted
                                is this container.
                              items:
                                description: Volume that should be mounted to a component
                                  container
                                properties:
                                  name:
                                    description: The volume mount name is the name
                                      of an existing `Volume` component. If several
                                      containers mount the same volume name then they
                                      will reuse the same volume and will be able
                                      to access to the same files.
                                    type: string
                                  path:
                                    description: The path in the component container
                                      where the volume should be mounted. If not path
                                      is mentioned, default path is the is `/<name>`.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        custom:
                          description: Custom component whose logic is implementation-dependant
                            and should be provided by the user possibly through some
                            dedicated controller
                          properties:
                            componentClass:
                              description: Class of component that the associated
                                implementation controller should use to process this
                                command with the appropriate logic
                              type: string
                            embeddedResource:
                              description: Additional free-form configuration for
                                this custom component that the implementation controller
                                will know how to use
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: Mandatory name that allows referencing
                                the component in commands, or inside a parent
                              type: string
                          required:
                          - componentClass
                          - embeddedResource
                          - name
                          type: object
                        kubernetes:
                          description: Allows importing into the workspace the Kubernetes
                            resources defined in a given manifest. For example this
                            allows reusing the Kubernetes definitions used to deploy
                            some runtime components in production.
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            endpoints:
                              items:
                                properties:
                                  attributes:
                                    additionalProperties:
                                      type: string
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main workspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      workspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process
                                    type: boolean
                                  targetPort:
                                    type: integer
                                required:
                                - name
                                type: object
                              type: array
                            inlined:
                              description: Inlined manifest
                              type: string
                            locationType:
                              description: Type of Kubernetes-like location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            name:
                              description: Mandatory name that allows referencing
                                the component in commands, or inside a parent
                              type: string
                            uri:
                              description: Location in a file fetched from a uri.
                              type: string
                          required:
                          - name
                          type: object
                        openshift:
                          description: Allows importing into the workspace the OpenShift
                            resources defined in a given manifest. For example this
                            allows reusing the OpenShift definitions used to deploy
                            some runtime components in production.
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            endpoints:
                              items:
                                properties:
                                  attributes:
                                    additionalProperties:
                                      type: string
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main workspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      workspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process
                                    type: boolean
                                  targetPort:
                                    type: integer
                                required:
                                - name
                                type: object
                              type: array
                            inlined:
                              description: Inlined manifest
                              type: string
                            locationType:
                              description: Type of Kubernetes-like location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            name:
                              description: Mandatory name that allows referencing
                                the component in commands, or inside a parent
                              type: string
                            uri:
                              description: Location in a file fetched from a uri.
                              type: string
                          required:
                          - name
                          type: object
                        plugin:
                          description: "Allows importing a plugin. \n Plugins are
                            mainly imported devfiles that contribute components, commands
                            and events as a consistent single unit. They are defined
                            in either YAML files following the devfile syntax, or
                            as `DevWorkspaceTemplate` Kubernetes Custom Resources"
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - id
                          - required:
                            - kubernetes
                          properties:
                            commands:
                              description: Overrides of commands encapsulated in a
                                parent devfile or a plugin. Overriding is done using
                                a strategic merge patch
                              items:
                                oneOf:
                                - required:
                                  - exec
                                - required:
                                  - apply
                                - required:
                                  - vscodeTask
                                - required:
                                  - vscodeLaunch
                                - required:
                                  - composite
                                - required:
                                  - custom
                                properties:
                                  apply:
                                    description: "Command that consists in applying
                                      a given component definition, typically bound
                                      to a workspace event. \n For example, when an
                                      `apply` command is bound to a `preStart` event,
                                      and references a `container` component, it will
                                      start the container as a K8S initContainer in
                                      the workspace POD, unless the component has
                                      its `dedicatedPod` field set to `true`. \n When
                                      no `apply` command exist for a given component,
                                      it is assumed the component will be applied
                                      at workspace start by default."
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      component:
                                        description: Describes component that will
                                          be applied
                                        type: string
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  commandType:
                                    description: Type of workspace command
                                    enum:
                                    - Exec
                                    - Apply
                                    - VscodeTask
                                    - VscodeLaunch
                                    - Composite
                                    - Custom
                                    type: string
                                  composite:
                                    description: Composite command that allows executing
                                      several sub-commands either sequentially or
                                      concurrently
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      commands:
                                        description: The commands that comprise this
                                          composite command
                                        items:
                                          type: string
                                        type: array
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                      parallel:
                                        description: Indicates if the sub-commands
                                          should be executed concurrently
                                        type: boolean
                                    required:
                                    - id
                                    type: object
                                  custom:
                                    description: Custom command whose logic is implementation-dependant
                                      and should be provided by the user possibly
                                      through some dedicated plugin
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      commandClass:
                                        description: Class of command that the associated
                                          implementation component should use to process
                                          this command with the appropriate logic
                                        type: string
                                      embeddedResource:
                                        description: Additional free-form configuration
                                          for this custom command that the implementation
                                          component will know how to use
                                        type: object
                                        x-kubernetes-embedded-resource: true
                                        x-kubernetes-preserve-unknown-fields: true
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                    required:
                                    - commandClass
                                    - embeddedResource
                                    - id
                                    type: object
                                  exec:
                                    description: CLI Command executed in an existing
                                      component container
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      commandLine:
                                        description: "The actual command-line string
                                          \n Special variables that can be used: \n
                                          \ - `$PROJECTS_ROOT`: A path where projects
                                          sources are mounted \n  - `$PROJECT_SOURCE`:
                                          A path to a project source ($PROJECTS_ROOT/<project-name>).
                                          If there are multiple projects, this will
                                          point to the directory of the first one."
                                        type: string
                                      component:
                                        description: Describes component to which
                                          given action relates
                                        type: string
                                      env:
                                        description: Optional list of environment
                                          variables that have to be set before running
                                          the command
                                        items:
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      hotReloadCapable:
                                        description: "Whether the command is capable
                                          to reload itself when source code changes.
                                          If set to `true` the command won't be restarted
                                          and it is expected to handle file changes
                                          on its own. \n Default value is `false`"
                                        type: boolean
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                      workingDir:
                                        description: "Working directory where the
                                          command should be executed \n Special variables
                                          that can be used: \n  - `${PROJECTS_ROOT}`:
                                          A path where projects sources are mounted
                                          \n  - `${PROJECT_SOURCE}`: A path to a project
                                          source (${PROJECTS_ROOT}/<project-name>).
                                          If there are multiple projects, this will
                                          point to the directory of the first one."
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  vscodeLaunch:
                                    description: "Command providing the definition
                                      of a VsCode launch action \n Deprecated; removed
                                      in v1alpha2"
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      inlined:
                                        description: Inlined content of the VsCode
                                          configuration
                                        type: string
                                      locationType:
                                        description: Type of Vscode configuration
                                          command location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      uri:
                                        description: Location as an absolute of relative
                                          URI the VsCode configuration will be fetched
                                          from
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  vscodeTask:
                                    description: "Command providing the definition
                                      of a VsCode Task \n Deprecated; removed in v1alpha2"
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: Optional map of free-form additional
                                          command attributes
                                        type: object
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        type: string
                                      inlined:
                                        description: Inlined content of the VsCode
                                          configuration
                                        type: string
                                      locationType:
                                        description: Type of Vscode configuration
                                          command location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      uri:
                                        description: Location as an absolute of relative
                                          URI the VsCode configuration will be fetched
                                          from
                                        type: string
                                    required:
                                    - id
                                    type: object
                                type: object
                              type: array
                            components:
                              description: Overrides of components encapsulated in
                                a plugin. Overriding is done using a strategic merge
                                patch. A plugin cannot override embedded plugin components.
                              items:
                                oneOf:
                                - required:
                                  - container
                                - required:
                                  - kubernetes
                                - required:
                                  - openshift
                                - required:
                                  - volume
                                properties:
                                  componentType:
                                    description: Type of component override for a
                                      plugin
                                    enum:
                                    - Container
                                    - Kubernetes
                                    - Openshift
                                    - Volume
                                    type: string
                                  container:
                                    description: Configuration overriding for a Container
                                      component in a plugin
                                    properties:
                                      args:
                                        description: "The arguments to supply to the
                                          command running the dockerimage component.
                                          The arguments are supplied either to the
                                          default command provided in the image or
                                          to the overridden command. \n Defaults to
                                          an empty array, meaning use whatever is
                                          defined in the image."
                                        items:
                                          type: string
                                        type: array
                                      command:
                                        description: "The command to run in the dockerimage
                                          component instead of the default one provided
                                          in the image. \n Defaults to an empty array,
                                          meaning use whatever is defined in the image."
                                        items:
                                          type: string
                                        type: array
                                      dedicatedPod:
                                        description: "Specify if a container should
                                          run in its own separated pod, instead of
                                          running as part of the main development
                                          environment pod. \n Default value is `false`"
                                        type: boolean
                                      endpoints:
                                        items:
                                          properties:
                                            attributes:
                                              additionalProperties:
                                                type: string
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main workspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main workspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process
                                              type: boolean
                                            targetPort:
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      env:
                                        description: Environment variables used in
                                          this container
                                        items:
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      image:
                                        type: string
                                      memoryLimit:
                                        type: string
                                      mountSources:
                                        type: boolean
                                      name:
                                        type: string
                                      sourceMapping:
                                        description: Optional specification of the
                                          path in the container where project sources
                                          should be transferred/mounted when `mountSources`
                                          is `true`. When omitted, the value of the
                                          `PROJECTS_ROOT` environment variable is
                                          used.
                                        type: string
                                      volumeMounts:
                                        description: List of volumes mounts that should
                                          be mounted is this container.
                                        items:
                                          description: Volume that should be mounted
                                            to a component container
                                          properties:
                                            name:
                                              description: The volume mount name is
                                                the name of an existing `Volume` component.
                                                If several containers mount the same
                                                volume name then they will reuse the
                                                same volume and will be able to access
                                                to the same files.
                                              type: string
                                            path:
                                              description: The path in the component
                                                container where the volume should
                                                be mounted. If not path is mentioned,
                                                default path is the is `/<name>`.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                    required:
                                    - name
                                    type: object
                                  kubernetes:
                                    description: Configuration overriding for a Kubernetes
                                      component in a plugin
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      endpoints:
                                        items:
                                          properties:
                                            attributes:
                                              additionalProperties:
                                                type: string
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main workspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main workspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process
                                              type: boolean
                                            targetPort:
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      inlined:
                                        description: Inlined manifest
                                        type: string
                                      locationType:
                                        description: Type of Kubernetes-like location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      name:
                                        description: Mandatory name that allows referencing
                                          the component in commands, or inside a parent
                                        type: string
                                      uri:
                                        description: Location in a file fetched from
                                          a uri.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  openshift:
                                    description: Configuration overriding for an OpenShift
                                      component in a plugin
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      endpoints:
                                        items:
                                          properties:
                                            attributes:
                                              additionalProperties:
                                                type: string
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main workspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main workspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process
                                              type: boolean
                                            targetPort:
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      inlined:
                                        description: Inlined manifest
                                        type: string
                                      locationType:
                                        description: Type of Kubernetes-like location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      name:
                                        description: Mandatory name that allows referencing
                                          the component in commands, or inside a parent
                                        type: string
                                      uri:
                                        description: Location in a file fetched from
                                          a uri.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  volume:
                                    description: Configuration overriding for a Volume
                                      component in a plugin
                                    properties:
                                      ephemeral:
                                        description: Ephemeral volumes are not stored
                                          persistently across restarts. Defaults to
                                          false
                                        type: boolean
                                      name:
                                        description: Mandatory name that allows referencing
                                          the Volume component in Container volume
                                          mounts or inside a parent
                                        type: string
                                      size:
                                        description: Size of the volume
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              type: array
                            id:
                              description: Id in a registry that contains a Devfile
                                yaml file
                              type: string
                            importReferenceType:
                              description: type of location from where the referenced
                                template structure should be retrieved
                              enum:
                              - Uri
                              - Id
                              - Kubernetes
                              type: string
                            kubernetes:
                              description: Reference to a Kubernetes CRD of type DevWorkspaceTemplate
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              type: object
                            name:
                              description: Optional name that allows referencing the
                                component in commands, or inside a parent If omitted
                                it will be infered from the location (uri or registryEntry)
                              type: string
                            registryUrl:
                              type: string
                            uri:
                              description: Uri of a Devfile yaml file
                              type: string
                          type: object
                        volume:
                          description: Allows specifying the definition of a volume
                            shared by several other components
                          properties:
                            ephemeral:
                              description: Ephemeral volumes are not stored persistently
                                across restarts. Defaults to false
                              type: boolean
                            name:
                              description: Mandatory name that allows referencing
                                the Volume component in Container volume mounts or
                                inside a parent
                              type: string
                            size:
                              description: Size of the volume
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    type: array
                  events:
                    description: Bindings of commands to events. Each command is referred-to
                      by its name.
                    properties:
                      postStart:
                        description: Names of commands that should be executed after
                          the workspace is completely started. In the case of Che-Theia,
                          these commands should be executed after all plugins and
                          extensions have started, including project cloning. This
                          means that those commands are not triggered until the user
                          opens the IDE in his browser.
                        items:
                          type: string
                        type: array
                      postStop:
                        description: Names of commands that should be executed after
                          stopping the workspace.
                        items:
                          type: string
                        type: array
                      preStart:
                        description: Names of commands that should be executed before
                          the workspace start. Kubernetes-wise, these commands would
                          typically be executed in init containers of the workspace
                          POD.
                        items:
                          type: string
                        type: array
                      preStop:
                        description: Names of commands that should be executed before
                          stopping the workspace.
                        items:
                          type: string
                        type: array
                    type: object
                  parent:
                    description: Parent workspace template
                    oneOf:
                    - required:
                      - uri
                    - required:
                      - id
                    - required:
                      - kubernetes
                    properties:
                      commands:
                        description: Overrides of commands encapsulated in a parent
                          devfile or a plugin. Overriding is done using a strategic
                          merge patch
                        items:
                          oneOf:
                          - required:
                            - exec
                          - required:
                            - apply
                          - required:
                            - vscodeTask
                          - required:
                            - vscodeLaunch
                          - required:
                            - composite
                          - required:
                            - custom
                          properties:
                            apply:
                              description: "Command that consists in applying a given
                                component definition, typically bound to a workspace
                                event. \n For example, when an `apply` command is
                                bound to a `preStart` event, and references a `container`
                                component, it will start the container as a K8S initContainer
                                in the workspace POD, unless the component has its
                                `dedicatedPod` field set to `true`. \n When no `apply`
                                command exist for a given component, it is assumed
                                the component will be applied at workspace start by
                                default."
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                component:
                                  description: Describes component that will be applied
                                  type: string
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                              required:
                              - id
                              type: object
                            commandType:
                              description: Type of workspace command
                              enum:
                              - Exec
                              - Apply
                              - VscodeTask
                              - VscodeLaunch
                              - Composite
                              - Custom
                              type: string
                            composite:
                              description: Composite command that allows executing
                                several sub-commands either sequentially or concurrently
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                commands:
                                  description: The commands that comprise this composite
                                    command
                                  items:
                                    type: string
                                  type: array
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                                parallel:
                                  description: Indicates if the sub-commands should
                                    be executed concurrently
                                  type: boolean
                              required:
                              - id
                              type: object
                            custom:
                              description: Custom command whose logic is implementation-dependant
                                and should be provided by the user possibly through
                                some dedicated plugin
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                commandClass:
                                  description: Class of command that the associated
                                    implementation component should use to process
                                    this command with the appropriate logic
                                  type: string
                                embeddedResource:
                                  description: Additional free-form configuration
                                    for this custom command that the implementation
                                    component will know how to use
                                  type: object
                                  x-kubernetes-embedded-resource: true
                                  x-kubernetes-preserve-unknown-fields: true
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                              required:
                              - commandClass
                              - embeddedResource
                              - id
                              type: object
                            exec:
                              description: CLI Command executed in an existing component
                                container
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                commandLine:
                                  description: "The actual command-line string \n
                                    Special variables that can be used: \n  - `$PROJECTS_ROOT`:
                                    A path where projects sources are mounted \n  -
                                    `$PROJECT_SOURCE`: A path to a project source
                                    ($PROJECTS_ROOT/<project-name>). If there are
                                    multiple projects, this will point to the directory
                                    of the first one."
                                  type: string
                                component:
                                  description: Describes component to which given
                                    action relates
                                  type: string
                                env:
                                  description: Optional list of environment variables
                                    that have to be set before running the command
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                hotReloadCapable:
                                  description: "Whether the command is capable to
                                    reload itself when source code changes. If set
                                    to `true` the command won't be restarted and it
                                    is expected to handle file changes on its own.
                                    \n Default value is `false`"
                                  type: boolean
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                                workingDir:
                                  description: "Working directory where the command
                                    should be executed \n Special variables that can
                                    be used: \n  - `${PROJECTS_ROOT}`: A path where
                                    projects sources are mounted \n  - `${PROJECT_SOURCE}`:
                                    A path to a project source (${PROJECTS_ROOT}/<project-name>).
                                    If there are multiple projects, this will point
                                    to the directory of the first one."
                                  type: string
                              required:
                              - id
                              type: object
                            vscodeLaunch:
                              description: "Command providing the definition of a
                                VsCode launch action \n Deprecated; removed in v1alpha2"
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                inlined:
                                  description: Inlined content of the VsCode configuration
                                  type: string
                                locationType:
                                  description: Type of Vscode configuration command
                                    location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                uri:
                                  description: Location as an absolute of relative
                                    URI the VsCode configuration will be fetched from
                                  type: string
                              required:
                              - id
                              type: object
                            vscodeTask:
                              description: "Command providing the definition of a
                                VsCode Task \n Deprecated; removed in v1alpha2"
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Optional map of free-form additional
                                    command attributes
                                  type: object
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      type: string
                                  required:
                                  - kind
                                  type: object
                                id:
                                  description: Mandatory identifier that allows referencing
                                    this command in composite commands, from a parent,
                                    or in events.
                                  type: string
                                inlined:
                                  description: Inlined content of the VsCode configuration
                                  type: string
                                locationType:
                                  description: Type of Vscode configuration command
                                    location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                uri:
                                  description: Location as an absolute of relative
                                    URI the VsCode configuration will be fetched from
                                  type: string
                              required:
                              - id
                              type: object
                          type: object
                        type: array
                      components:
                        description: Overrides of components encapsulated in a parent
                          devfile. Overriding is done using a strategic merge patch
                        items:
                          oneOf:
                          - required:
                            - container
                          - required:
                            - kubernetes
                          - required:
                            - openshift
                          - required:
                            - volume
                          - required:
                            - plugin
                          - required:
                            - custom
                          properties:
                            componentType:
                              description: Type of component
                              enum:
                              - Container
                              - Kubernetes
                              - Openshift
                              - Volume
                              - Plugin
                              - Custom
                              type: string
                            container:
                              description: Allows adding and configuring workspace-related
                                containers
                              properties:
                                args:
                                  description: "The arguments to supply to the command
                                    running the dockerimage component. The arguments
                                    are supplied either to the default command provided
                                    in the image or to the overridden command. \n
                                    Defaults to an empty array, meaning use whatever
                                    is defined in the image."
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: "The command to run in the dockerimage
                                    component instead of the default one provided
                                    in the image. \n Defaults to an empty array, meaning
                                    use whatever is defined in the image."
                                  items:
                                    type: string
                                  type: array
                                dedicatedPod:
                                  description: "Specify if a container should run
                                    in its own separated pod, instead of running as
                                    part of the main development environment pod.
                                    \n Default value is `false`"
                                  type: boolean
                                endpoints:
                                  items:
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          workspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main workspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process
                                        type: boolean
                                      targetPort:
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                env:
                                  description: Environment variables used in this
                                    container
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                image:
                                  type: string
                                memoryLimit:
                                  type: string
                                mountSources:
                                  type: boolean
                                name:
                                  type: string
                                sourceMapping:
                                  description: Optional specification of the path
                                    in the container where project sources should
                                    be transferred/mounted when `mountSources` is
                                    `true`. When omitted, the value of the `PROJECTS_ROOT`
                                    environment variable is used.
                                  type: string
                                volumeMounts:
                                  description: List of volumes mounts that should
                                    be mounted is this container.
                                  items:
                                    description: Volume that should be mounted to
                                      a component container
                                    properties:
                                      name:
                                        description: The volume mount name is the
                                          name of an existing `Volume` component.
                                          If several containers mount the same volume
                                          name then they will reuse the same volume
                                          and will be able to access to the same files.
                                        type: string
                                      path:
                                        description: The path in the component container
                                          where the volume should be mounted. If not
                                          path is mentioned, default path is the is
                                          `/<name>`.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            custom:
                              description: Custom component whose logic is implementation-dependant
                                and should be provided by the user possibly through
                                some dedicated controller
                              properties:
                                componentClass:
                                  description: Class of component that the associated
                                    implementation controller should use to process
                                    this command with the appropriate logic
                                  type: string
                                embeddedResource:
                                  description: Additional free-form configuration
                                    for this custom component that the implementation
                                    controller will know how to use
                                  type: object
                                  x-kubernetes-embedded-resource: true
                                  x-kubernetes-preserve-unknown-fields: true
                                name:
                                  description: Mandatory name that allows referencing
                                    the component in commands, or inside a parent
                                  type: string
                              required:
                              - componentClass
                              - embeddedResource
                              - name
                              type: object
                            kubernetes:
                              description: Allows importing into the workspace the
                                Kubernetes resources defined in a given manifest.
                                For example this allows reusing the Kubernetes definitions
                                used to deploy some runtime components in production.
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                endpoints:
                                  items:
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          workspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main workspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process
                                        type: boolean
                                      targetPort:
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                inlined:
                                  description: Inlined manifest
                                  type: string
                                locationType:
                                  description: Type of Kubernetes-like location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                name:
                                  description: Mandatory name that allows referencing
                                    the component in commands, or inside a parent
                                  type: string
                                uri:
                                  description: Location in a file fetched from a uri.
                                  type: string
                              required:
                              - name
                              type: object
                            openshift:
                              description: Allows importing into the workspace the
                                OpenShift resources defined in a given manifest. For
                                example this allows reusing the OpenShift definitions
                                used to deploy some runtime components in production.
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                endpoints:
                                  items:
                                    properties:
                                      attributes:
                                        additionalProperties:
                                          type: string
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          workspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main workspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process
                                        type: boolean
                                      targetPort:
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                inlined:
                                  description: Inlined manifest
                                  type: string
                                locationType:
                                  description: Type of Kubernetes-like location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                name:
                                  description: Mandatory name that allows referencing
                                    the component in commands, or inside a parent
                                  type: string
                                uri:
                                  description: Location in a file fetched from a uri.
                                  type: string
                              required:
                              - name
                              type: object
                            plugin:
                              description: "Allows importing a plugin. \n Plugins
                                are mainly imported devfiles that contribute components,
                                commands and events as a consistent single unit. They
                                are defined in either YAML files following the devfile
                                syntax, or as `DevWorkspaceTemplate` Kubernetes Custom
                                Resources"
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - id
                              - required:
                                - kubernetes
                              properties:
                                commands:
                                  description: Overrides of commands encapsulated
                                    in a parent devfile or a plugin. Overriding is
                                    done using a strategic merge patch
                                  items:
                                    oneOf:
                                    - required:
                                      - exec
                                    - required:
                                      - apply
                                    - required:
                                      - vscodeTask
                                    - required:
                                      - vscodeLaunch
                                    - required:
                                      - composite
                                    - required:
                                      - custom
                                    properties:
                                      apply:
                                        description: "Command that consists in applying
                                          a given component definition, typically
                                          bound to a workspace event. \n For example,
                                          when an `apply` command is bound to a `preStart`
                                          event, and references a `container` component,
                                          it will start the container as a K8S initContainer
                                          in the workspace POD, unless the component
                                          has its `dedicatedPod` field set to `true`.
                                          \n When no `apply` command exist for a given
                                          component, it is assumed the component will
                                          be applied at workspace start by default."
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          component:
                                            description: Describes component that
                                              will be applied
                                            type: string
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                        required:
                                        - id
                                        type: object
                                      commandType:
                                        description: Type of workspace command
                                        enum:
                                        - Exec
                                        - Apply
                                        - VscodeTask
                                        - VscodeLaunch
                                        - Composite
                                        - Custom
                                        type: string
                                      composite:
                                        description: Composite command that allows
                                          executing several sub-commands either sequentially
                                          or concurrently
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          commands:
                                            description: The commands that comprise
                                              this composite command
                                            items:
                                              type: string
                                            type: array
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                          parallel:
                                            description: Indicates if the sub-commands
                                              should be executed concurrently
                                            type: boolean
                                        required:
                                        - id
                                        type: object
                                      custom:
                                        description: Custom command whose logic is
                                          implementation-dependant and should be provided
                                          by the user possibly through some dedicated
                                          plugin
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          commandClass:
                                            description: Class of command that the
                                              associated implementation component
                                              should use to process this command with
                                              the appropriate logic
                                            type: string
                                          embeddedResource:
                                            description: Additional free-form configuration
                                              for this custom command that the implementation
                                              component will know how to use
                                            type: object
                                            x-kubernetes-embedded-resource: true
                                            x-kubernetes-preserve-unknown-fields: true
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                        required:
                                        - commandClass
                                        - embeddedResource
                                        - id
                                        type: object
                                      exec:
                                        description: CLI Command executed in an existing
                                          component container
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          commandLine:
                                            description: "The actual command-line
                                              string \n Special variables that can
                                              be used: \n  - `$PROJECTS_ROOT`: A path
                                              where projects sources are mounted \n
                                              \ - `$PROJECT_SOURCE`: A path to a project
                                              source ($PROJECTS_ROOT/<project-name>).
                                              If there are multiple projects, this
                                              will point to the directory of the first
                                              one."
                                            type: string
                                          component:
                                            description: Describes component to which
                                              given action relates
                                            type: string
                                          env:
                                            description: Optional list of environment
                                              variables that have to be set before
                                              running the command
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          hotReloadCapable:
                                            description: "Whether the command is capable
                                              to reload itself when source code changes.
                                              If set to `true` the command won't be
                                              restarted and it is expected to handle
                                              file changes on its own. \n Default
                                              value is `false`"
                                            type: boolean
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                          workingDir:
                                            description: "Working directory where
                                              the command should be executed \n Special
                                              variables that can be used: \n  - `${PROJECTS_ROOT}`:
                                              A path where projects sources are mounted
                                              \n  - `${PROJECT_SOURCE}`: A path to
                                              a project source (${PROJECTS_ROOT}/<project-name>).
                                              If there are multiple projects, this
                                              will point to the directory of the first
                                              one."
                                            type: string
                                        required:
                                        - id
                                        type: object
                                      vscodeLaunch:
                                        description: "Command providing the definition
                                          of a VsCode launch action \n Deprecated;
                                          removed in v1alpha2"
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          inlined:
                                            description: Inlined content of the VsCode
                                              configuration
                                            type: string
                                          locationType:
                                            description: Type of Vscode configuration
                                              command location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          uri:
                                            description: Location as an absolute of
                                              relative URI the VsCode configuration
                                              will be fetched from
                                            type: string
                                        required:
                                        - id
                                        type: object
                                      vscodeTask:
                                        description: "Command providing the definition
                                          of a VsCode Task \n Deprecated; removed
                                          in v1alpha2"
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          attributes:
                                            additionalProperties:
                                              type: string
                                            description: Optional map of free-form
                                              additional command attributes
                                            type: object
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                type: string
                                            required:
                                            - kind
                                            type: object
                                          id:
                                            description: Mandatory identifier that
                                              allows referencing this command in composite
                                              commands, from a parent, or in events.
                                            type: string
                                          inlined:
                                            description: Inlined content of the VsCode
                                              configuration
                                            type: string
                                          locationType:
                                            description: Type of Vscode configuration
                                              command location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          uri:
                                            description: Location as an absolute of
                                              relative URI the VsCode configuration
                                              will be fetched from
                                            type: string
                                        required:
                                        - id
                                        type: object
                                    type: object
                                  type: array
                                components:
                                  description: Overrides of components encapsulated
                                    in a plugin. Overriding is done using a strategic
                                    merge patch. A plugin cannot override embedded
                                    plugin components.
                                  items:
                                    oneOf:
                                    - required:
                                      - container
                                    - required:
                                      - kubernetes
                                    - required:
                                      - openshift
                                    - required:
                                      - volume
                                    properties:
                                      componentType:
                                        description: Type of component override for
                                          a plugin
                                        enum:
                                        - Container
                                        - Kubernetes
                                        - Openshift
                                        - Volume
                                        type: string
                                      container:
                                        description: Configuration overriding for
                                          a Container component in a plugin
                                        properties:
                                          args:
                                            description: "The arguments to supply
                                              to the command running the dockerimage
                                              component. The arguments are supplied
                                              either to the default command provided
                                              in the image or to the overridden command.
                                              \n Defaults to an empty array, meaning
                                              use whatever is defined in the image."
                                            items:
                                              type: string
                                            type: array
                                          command:
                                            description: "The command to run in the
                                              dockerimage component instead of the
                                              default one provided in the image. \n
                                              Defaults to an empty array, meaning
                                              use whatever is defined in the image."
                                            items:
                                              type: string
                                            type: array
                                          dedicatedPod:
                                            description: "Specify if a container should
                                              run in its own separated pod, instead
                                              of running as part of the main development
                                              environment pod. \n Default value is
                                              `false`"
                                            type: boolean
                                          endpoints:
                                            items:
                                              properties:
                                                attributes:
                                                  additionalProperties:
                                                    type: string
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main workspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main workspace POD, on a local
                                                    address. \n Default value is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process
                                                  type: boolean
                                                targetPort:
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          env:
                                            description: Environment variables used
                                              in this container
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          image:
                                            type: string
                                          memoryLimit:
                                            type: string
                                          mountSources:
                                            type: boolean
                                          name:
                                            type: string
                                          sourceMapping:
                                            description: Optional specification of
                                              the path in the container where project
                                              sources should be transferred/mounted
                                              when `mountSources` is `true`. When
                                              omitted, the value of the `PROJECTS_ROOT`
                                              environment variable is used.
                                            type: string
                                          volumeMounts:
                                            description: List of volumes mounts that
                                              should be mounted is this container.
                                            items:
                                              description: Volume that should be mounted
                                                to a component container
                                              properties:
                                                name:
                                                  description: The volume mount name
                                                    is the name of an existing `Volume`
                                                    component. If several containers
                                                    mount the same volume name then
                                                    they will reuse the same volume
                                                    and will be able to access to
                                                    the same files.
                                                  type: string
                                                path:
                                                  description: The path in the component
                                                    container where the volume should
                                                    be mounted. If not path is mentioned,
                                                    default path is the is `/<name>`.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - name
                                        type: object
                                      kubernetes:
                                        description: Configuration overriding for
                                          a Kubernetes component in a plugin
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          endpoints:
                                            items:
                                              properties:
                                                attributes:
                                                  additionalProperties:
                                                    type: string
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main workspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main workspace POD, on a local
                                                    address. \n Default value is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process
                                                  type: boolean
                                                targetPort:
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          inlined:
                                            description: Inlined manifest
                                            type: string
                                          locationType:
                                            description: Type of Kubernetes-like location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          name:
                                            description: Mandatory name that allows
                                              referencing the component in commands,
                                              or inside a parent
                                            type: string
                                          uri:
                                            description: Location in a file fetched
                                              from a uri.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      openshift:
                                        description: Configuration overriding for
                                          an OpenShift component in a plugin
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          endpoints:
                                            items:
                                              properties:
                                                attributes:
                                                  additionalProperties:
                                                    type: string
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main workspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main workspace POD, on a local
                                                    address. \n Default value is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process
                                                  type: boolean
                                                targetPort:
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          inlined:
                                            description: Inlined manifest
                                            type: string
                                          locationType:
                                            description: Type of Kubernetes-like location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          name:
                                            description: Mandatory name that allows
                                              referencing the component in commands,
                                              or inside a parent
                                            type: string
                                          uri:
                                            description: Location in a file fetched
                                              from a uri.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      volume:
                                        description: Configuration overriding for
                                          a Volume component in a plugin
                                        properties:
                                          ephemeral:
                                            description: Ephemeral volumes are not
                                              stored persistently across restarts.
                                              Defaults to false
                                            type: boolean
                                          name:
                                            description: Mandatory name that allows
                                              referencing the Volume component in
                                              Container volume mounts or inside a
                                              parent
                                            type: string
                                          size:
                                            description: Size of the volume
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    type: object
                                  type: array
                                id:
                                  description: Id in a registry that contains a Devfile
                                    yaml file
                                  type: string
                                importReferenceType:
                                  description: type of location from where the referenced
                                    template structure should be retrieved
                                  enum:
                                  - Uri
                                  - Id
                                  - Kubernetes
                                  type: string
                                kubernetes:
                                  description: Reference to a Kubernetes CRD of type
                                    DevWorkspaceTemplate
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                name:
                                  description: Optional name that allows referencing
                                    the component in commands, or inside a parent
                                    If omitted it will be infered from the location
                                    (uri or registryEntry)
                                  type: string
                                registryUrl:
                                  type: string
                                uri:
                                  description: Uri of a Devfile yaml file
                                  type: string
                              type: object
                            volume:
                              description: Allows specifying the definition of a volume
                                shared by several other components
                              properties:
                                ephemeral:
                                  description: Ephemeral volumes are not stored persistently
                                    across restarts. Defaults to false
                                  type: boolean
                                name:
                                  description: Mandatory name that allows referencing
                                    the Volume component in Container volume mounts
                                    or inside a parent
                                  type: string
                                size:
                                  description: Size of the volume
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                        type: array
                      id:
                        description: Id in a registry that contains a Devfile yaml
                          file
                        type: string
                      importReferenceType:
                        description: type of location from where the referenced template
                          structure should be retrieved
                        enum:
                        - Uri
                        - Id
                        - Kubernetes
                        type: string
                      kubernetes:
                        description: Reference to a Kubernetes CRD of type DevWorkspaceTemplate
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                      projects:
                        description: Overrides of projects encapsulated in a parent
                          devfile. Overriding is done using a strategic merge patch.
                        items:
                          oneOf:
                          - required:
                            - git
                          - required:
                            - github
                          - required:
                            - zip
                          - required:
                            - custom
                          properties:
                            clonePath:
                              description: Path relative to the root of the projects
                                to which this project should be cloned into. This
                                is a unix-style relative path (i.e. uses forward slashes).
                                The path is invalid if it is absolute or tries to
                                escape the project root through the usage of '..'.
                                If not specified, defaults to the project name.
                              type: string
                            custom:
                              description: Project's Custom source
                              properties:
                                embeddedResource:
                                  type: object
                                  x-kubernetes-embedded-resource: true
                                  x-kubernetes-preserve-unknown-fields: true
                                projectSourceClass:
                                  type: string
                              required:
                              - embeddedResource
                              - projectSourceClass
                              type: object
                            git:
                              description: Project's Git source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Must have at least one remote
                                    configured
                                  type: object
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                            github:
                              description: Project's GitHub source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Must have at least one remote
                                    configured
                                  type: object
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                            name:
                              description: Project name
                              type: string
                            sourceType:
                              description: Type of project source
                              enum:
                              - Git
                              - Github
                              - Zip
                              - Custom
                              type: string
                            zip:
                              description: Project's Zip source
                              properties:
                                location:
                                  description: Zip project's source location address.
                                    Should be file path of the archive, e.g. file://$FILE_PATH
                                  type: string
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      registryUrl:
                        type: string
                      starterProjects:
                        description: Overrides of starter projects encapsulated in
                          a parent devfile Overriding is done using a strategic merge
                          patch.
                        items:
                          oneOf:
                          - required:
                            - git
                          - required:
                            - github
                          - required:
                            - zip
                          - required:
                            - custom
                          properties:
                            clonePath:
                              description: Path relative to the root of the projects
                                to which this project should be cloned into. This
                                is a unix-style relative path (i.e. uses forward slashes).
                                The path is invalid if it is absolute or tries to
                                escape the project root through the usage of '..'.
                                If not specified, defaults to the project name.
                              type: string
                            custom:
                              description: Project's Custom source
                              properties:
                                embeddedResource:
                                  type: object
                                  x-kubernetes-embedded-resource: true
                                  x-kubernetes-preserve-unknown-fields: true
                                projectSourceClass:
                                  type: string
                              required:
                              - embeddedResource
                              - projectSourceClass
                              type: object
                            description:
                              description: Description of a starter project
                              type: string
                            git:
                              description: Project's Git source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Must have at least one remote
                                    configured
                                  type: object
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                            github:
                              description: Project's GitHub source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Must have at least one remote
                                    configured
                                  type: object
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                            name:
                              description: Project name
                              type: string
                            sourceType:
                              description: Type of project source
                              enum:
                              - Git
                              - Github
                              - Zip
                              - Custom
                              type: string
                            zip:
                              description: Project's Zip source
                              properties:
                                location:
                                  description: Zip project's source location address.
                                    Should be file path of the archive, e.g. file://$FILE_PATH
                                  type: string
                                sparseCheckoutDir:
                                  description: Part of project to populate in the
                                    working directory.
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      uri:
                        description: Uri of a Devfile yaml file
                        type: string
                    type: object
                  projects:
                    description: Projects worked on in the workspace, containing names
                      and sources locations
                    items:
                      oneOf:
                      - required:
                        - git
                      - required:
                        - github
                      - required:
                        - zip
                      - required:
                        - custom
                      properties:
                        clonePath:
                          description: Path relative to the root of the projects to
                            which this project should be cloned into. This is a unix-style
                            relative path (i.e. uses forward slashes). The path is
                            invalid if it is absolute or tries to escape the project
                            root through the usage of '..'. If not specified, defaults
                            to the project name.
                          type: string
                        custom:
                          description: Project's Custom source
                          properties:
                            embeddedResource:
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            projectSourceClass:
                              type: string
                          required:
                          - embeddedResource
                          - projectSourceClass
                          type: object
                        git:
                          description: Project's Git source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Must have at least one remote
                                configured
                              type: object
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                        github:
                          description: Project's GitHub source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Must have at least one remote
                                configured
                              type: object
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                        name:
                          description: Project name
                          type: string
                        sourceType:
                          description: Type of project source
                          enum:
                          - Git
                          - Github
                          - Zip
                          - Custom
                          type: string
                        zip:
                          description: Project's Zip source
                          properties:
                            location:
                              description: Zip project's source location address.
                                Should be file path of the archive, e.g. file://$FILE_PATH
                              type: string
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  starterProjects:
                    description: StarterProjects is a project that can be used as
                      a starting point when bootstrapping new projects
                    items:
                      oneOf:
                      - required:
                        - git
                      - required:
                        - github
                      - required:
                        - zip
                      - required:
                        - custom
                      properties:
                        clonePath:
                          description: Path relative to the root of the projects to
                            which this project should be cloned into. This is a unix-style
                            relative path (i.e. uses forward slashes). The path is
                            invalid if it is absolute or tries to escape the project
                            root through the usage of '..'. If not specified, defaults
                            to the project name.
                          type: string
                        custom:
                          description: Project's Custom source
                          properties:
                            embeddedResource:
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            projectSourceClass:
                              type: string
                          required:
                          - embeddedResource
                          - projectSourceClass
                          type: object
                        description:
                          description: Description of a starter project
                          type: string
                        git:
                          description: Project's Git source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Must have at least one remote
                                configured
                              type: object
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                        github:
                          description: Project's GitHub source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Must have at least one remote
                                configured
                              type: object
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                        name:
                          description: Project name
                          type: string
                        sourceType:
                          description: Type of project source
                          enum:
                          - Git
                          - Github
                          - Zip
                          - Custom
                          type: string
                        zip:
                          description: Project's Zip source
                          properties:
                            location:
                              description: Zip project's source location address.
                                Should be file path of the archive, e.g. file://$FILE_PATH
                              type: string
                            sparseCheckoutDir:
                              description: Part of project to populate in the working
                                directory.
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
            required:
            - started
            type: object
          status:
            description: DevWorkspaceStatus defines the observed state of DevWorkspace
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: WorkspaceCondition contains details for the current
                    condition of this workspace.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Phase is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ideUrl:
                description: URL at which the Worksace Editor can be joined
                type: string
              message:
                description: Message is a short user-readable message giving additional
                  information about an object's state
                type: string
              phase:
                type: string
              workspaceId:
                description: Id of the workspace
                type: string
            required:
            - workspaceId
            type: object
        type: object
    served: true
    storage: false
  - additionalPrinterColumns:
    - JSONPath: .status.devworkspaceId
      description: The devworkspace's unique id
      name: DevWorkspace ID
      type: string
    - JSONPath: .status.phase
      description: The current devworkspace startup phase
      name: Phase
      type: string
    - JSONPath: .status.message
      description: Additional information about the devworkspace
      name: Info
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: DevWorkspace is the Schema for the devworkspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DevWorkspaceSpec defines the desired state of DevWorkspace
            properties:
              contributions:
                items:
                  oneOf:
                  - required:
                    - uri
                  - required:
                    - id
                  - required:
                    - kubernetes
                  properties:
                    attributes:
                      description: Map of implementation-dependant free-form YAML
                        attributes.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    commands:
                      description: Overrides of commands encapsulated in a parent
                        devfile or a plugin. Overriding is done according to K8S strategic
                        merge patch standard rules.
                      items:
                        oneOf:
                        - required:
                          - exec
                        - required:
                          - apply
                        - required:
                          - composite
                        properties:
                          apply:
                            description: "Command that consists in applying a given
                              component definition, typically bound to a devworkspace
                              event. \n For example, when an `apply` command is bound
                              to a `preStart` event, and references a `container`
                              component, it will start the container as a K8S initContainer
                              in the devworkspace POD, unless the component has its
                              `dedicatedPod` field set to `true`. \n When no `apply`
                              command exist for a given component, it is assumed the
                              component will be applied at devworkspace start by default,
                              unless `deployByDefault` for that component is set to
                              false."
                            properties:
                              component:
                                description: Describes component that will be applied
                                type: string
                              group:
                                description: Defines the group this command is part
                                  of
                                properties:
                                  isDefault:
                                    description: Identifies the default command for
                                      a given group kind
                                    type: boolean
                                  kind:
                                    description: Kind of group the command is part
                                      of
                                    enum:
                                    - build
                                    - run
                                    - test
                                    - debug
                                    - deploy
                                    type: string
                                type: object
                              label:
                                description: Optional label that provides a label
                                  for this command to be used in Editor UI menus for
                                  example
                                type: string
                            type: object
                          attributes:
                            description: Map of implementation-dependant free-form
                              YAML attributes.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          commandType:
                            description: Type of devworkspace command
                            enum:
                            - Exec
                            - Apply
                            - Composite
                            type: string
                          composite:
                            description: Composite command that allows executing several
                              sub-commands either sequentially or concurrently
                            properties:
                              commands:
                                description: The commands that comprise this composite
                                  command
                                items:
                                  type: string
                                type: array
                              group:
                                description: Defines the group this command is part
                                  of
                                properties:
                                  isDefault:
                                    description: Identifies the default command for
                                      a given group kind
                                    type: boolean
                                  kind:
                                    description: Kind of group the command is part
                                      of
                                    enum:
                                    - build
                                    - run
                                    - test
                                    - debug
                                    - deploy
                                    type: string
                                type: object
                              label:
                                description: Optional label that provides a label
                                  for this command to be used in Editor UI menus for
                                  example
                                type: string
                              parallel:
                                description: Indicates if the sub-commands should
                                  be executed concurrently
                                type: boolean
                            type: object
                          exec:
                            description: CLI Command executed in an existing component
                              container
                            properties:
                              commandLine:
                                description: "The actual command-line string \n Special
                                  variables that can be used: \n  - `$PROJECTS_ROOT`:
                                  A path where projects sources are mounted as defined
                                  by container component's sourceMapping. \n  - `$PROJECT_SOURCE`:
                                  A path to a project source ($PROJECTS_ROOT/<project-name>).
                                  If there are multiple projects, this will point
                                  to the directory of the first one."
                                type: string
                              component:
                                description: Describes component to which given action
                                  relates
                                type: string
                              env:
                                description: Optional list of environment variables
                                  that have to be set before running the command
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              group:
                                description: Defines the group this command is part
                                  of
                                properties:
                                  isDefault:
                                    description: Identifies the default command for
                                      a given group kind
                                    type: boolean
                                  kind:
                                    description: Kind of group the command is part
                                      of
                                    enum:
                                    - build
                                    - run
                                    - test
                                    - debug
                                    - deploy
                                    type: string
                                type: object
                              hotReloadCapable:
                                description: "Whether the command is capable to reload
                                  itself when source code changes. If set to `true`
                                  the command won't be restarted and it is expected
                                  to handle file changes on its own. \n Default value
                                  is `false`"
                                type: boolean
                              label:
                                description: Optional label that provides a label
                                  for this command to be used in Editor UI menus for
                                  example
                                type: string
                              workingDir:
                                description: "Working directory where the command
                                  should be executed \n Special variables that can
                                  be used: \n  - `$PROJECTS_ROOT`: A path where projects
                                  sources are mounted as defined by container component's
                                  sourceMapping. \n  - `$PROJECT_SOURCE`: A path to
                                  a project source ($PROJECTS_ROOT/<project-name>).
                                  If there are multiple projects, this will point
                                  to the directory of the first one."
                                type: string
                            type: object
                          id:
                            description: Mandatory identifier that allows referencing
                              this command in composite commands, from a parent, or
                              in events.
                            maxLength: 63
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - id
                        type: object
                      type: array
                    components:
                      description: Overrides of components encapsulated in a parent
                        devfile or a plugin. Overriding is done according to K8S strategic
                        merge patch standard rules.
                      items:
                        oneOf:
                        - required:
                          - container
                        - required:
                          - kubernetes
                        - required:
                          - openshift
                        - required:
                          - volume
                        - required:
                          - image
                        properties:
                          attributes:
                            description: Map of implementation-dependant free-form
                              YAML attributes.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          componentType:
                            description: Type of component
                            enum:
                            - Container
                            - Kubernetes
                            - Openshift
                            - Volume
                            - Image
                            type: string
                          container:
                            description: Allows adding and configuring devworkspace-related
                              containers
                            properties:
                              annotation:
                                description: Annotations that should be added to specific
                                  resources for this container
                                properties:
                                  deployment:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to be added to deployment
                                    type: object
                                  service:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to be added to service
                                    type: object
                                type: object
                              args:
                                description: "The arguments to supply to the command
                                  running the dockerimage component. The arguments
                                  are supplied either to the default command provided
                                  in the image or to the overridden command. \n Defaults
                                  to an empty array, meaning use whatever is defined
                                  in the image."
                                items:
                                  type: string
                                type: array
                              command:
                                description: "The command to run in the dockerimage
                                  component instead of the default one provided in
                                  the image. \n Defaults to an empty array, meaning
                                  use whatever is defined in the image."
                                items:
                                  type: string
                                type: array
                              cpuLimit:
                                type: string
                              cpuRequest:
                                type: string
                              dedicatedPod:
                                description: "Specify if a container should run in
                                  its own separated pod, instead of running as part
                                  of the main development environment pod. \n Default
                                  value is `false`"
                                type: boolean
                              endpoints:
                                items:
                                  properties:
                                    annotation:
                                      additionalProperties:
                                        type: string
                                      description: Annotations to be added to Kubernetes
                                        Ingress or Openshift Route
                                      type: object
                                    attributes:
                                      description: "Map of implementation-dependant
                                        string-based free-form attributes. \n Examples
                                        of Che-specific attributes: \n - cookiesAuthEnabled:
                                        \"true\" / \"false\", \n - type: \"terminal\"
                                        / \"ide\" / \"ide-dev\","
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    exposure:
                                      description: "Describes how the endpoint should
                                        be exposed on the network. \n - `public` means
                                        that the endpoint will be exposed on the public
                                        network, typically through a K8S ingress or
                                        an OpenShift route. \n - `internal` means
                                        that the endpoint will be exposed internally
                                        outside of the main devworkspace POD, typically
                                        by K8S services, to be consumed by other elements
                                        running on the same cloud internal network.
                                        \n - `none` means that the endpoint will not
                                        be exposed and will only be accessible inside
                                        the main devworkspace POD, on a local address.
                                        \n Default value is `public`"
                                      enum:
                                      - public
                                      - internal
                                      - none
                                      type: string
                                    name:
                                      maxLength: 63
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    path:
                                      description: Path of the endpoint URL
                                      type: string
                                    protocol:
                                      description: "Describes the application and
                                        transport protocols of the traffic that will
                                        go through this endpoint. \n - `http`: Endpoint
                                        will have `http` traffic, typically on a TCP
                                        connection. It will be automaticaly promoted
                                        to `https` when the `secure` field is set
                                        to `true`. \n - `https`: Endpoint will have
                                        `https` traffic, typically on a TCP connection.
                                        \n - `ws`: Endpoint will have `ws` traffic,
                                        typically on a TCP connection. It will be
                                        automaticaly promoted to `wss` when the `secure`
                                        field is set to `true`. \n - `wss`: Endpoint
                                        will have `wss` traffic, typically on a TCP
                                        connection. \n - `tcp`: Endpoint will have
                                        traffic on a TCP connection, without specifying
                                        an application protocol. \n - `udp`: Endpoint
                                        will have traffic on an UDP connection, without
                                        specifying an application protocol. \n Default
                                        value is `http`"
                                      enum:
                                      - http
                                      - https
                                      - ws
                                      - wss
                                      - tcp
                                      - udp
                                      type: string
                                    secure:
                                      description: Describes whether the endpoint
                                        should be secured and protected by some authentication
                                        process. This requires a protocol of `https`
                                        or `wss`.
                                      type: boolean
                                    targetPort:
                                      description: Port number to be used within the
                                        container component. The same port cannot
                                        be used by two different container components.
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                type: array
                              env:
                                description: "Environment variables used in this container.
                                  \n The following variables are reserved and cannot
                                  be overridden via env: \n  - `$PROJECTS_ROOT` \n
                                  \ - `$PROJECT_SOURCE`"
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              memoryLimit:
                                type: string
                              memoryRequest:
                                type: string
                              mountSources:
                                description: "Toggles whether or not the project source
                                  code should be mounted in the component. \n Defaults
                                  to true for all component types except plugins and
                                  components that set `dedicatedPod` to true."
                                type: boolean
                              sourceMapping:
                                description: Optional specification of the path in
                                  the container where project sources should be transferred/mounted
                                  when `mountSources` is `true`. When omitted, the
                                  default value of /projects is used.
                                type: string
                              volumeMounts:
                                description: List of volumes mounts that should be
                                  mounted is this container.
                                items:
                                  description: Volume that should be mounted to a
                                    component container
                                  properties:
                                    name:
                                      description: The volume mount name is the name
                                        of an existing `Volume` component. If several
                                        containers mount the same volume name then
                                        they will reuse the same volume and will be
                                        able to access to the same files.
                                      maxLength: 63
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    path:
                                      description: The path in the component container
                                        where the volume should be mounted. If not
                                        path is mentioned, default path is the is
                                        `/<name>`.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            type: object
                          image:
                            description: Allows specifying the definition of an image
                              for outer loop builds
                            oneOf:
                            - required:
                              - dockerfile
                            - required:
                              - autoBuild
                            properties:
                              autoBuild:
                                description: "Defines if the image should be built
                                  during startup. \n Default value is `false`"
                                type: boolean
                              dockerfile:
                                description: Allows specifying dockerfile type build
                                oneOf:
                                - required:
                                  - uri
                                - required:
                                  - devfileRegistry
                                - required:
                                  - git
                                properties:
                                  args:
                                    description: The arguments to supply to the dockerfile
                                      build.
                                    items:
                                      type: string
                                    type: array
                                  buildContext:
                                    description: Path of source directory to establish
                                      build context. Defaults to ${PROJECT_SOURCE}
                                      in the container
                                    type: string
                                  devfileRegistry:
                                    description: Dockerfile's Devfile Registry source
                                    properties:
                                      id:
                                        description: Id in a devfile registry that
                                          contains a Dockerfile. The src in the OCI
                                          registry required for the Dockerfile build
                                          will be downloaded for building the image.
                                        type: string
                                      registryUrl:
                                        description: Devfile Registry URL to pull
                                          the Dockerfile from when using the Devfile
                                          Registry as Dockerfile src. To ensure the
                                          Dockerfile gets resolved consistently in
                                          different environments, it is recommended
                                          to always specify the `devfileRegistryUrl`
                                          when `Id` is used.
                                        type: string
                                    type: object
                                  git:
                                    description: Dockerfile's Git source
                                    properties:
                                      checkoutFrom:
                                        description: Defines from what the project
                                          should be checked out. Required if there
                                          are more than one remote configured
                                        properties:
                                          remote:
                                            description: The remote name should be
                                              used as init. Required if there are
                                              more than one remote configured
                                            type: string
                                          revision:
                                            description: The revision to checkout
                                              from. Should be branch name, tag or
                                              commit id. Default branch is used if
                                              missing or specified revision is not
                                              found.
                                            type: string
                                        type: object
                                      fileLocation:
                                        description: Location of the Dockerfile in
                                          the Git repository when using git as Dockerfile
                                          src. Defaults to Dockerfile.
                                        type: string
                                      remotes:
                                        additionalProperties:
                                          type: string
                                        description: The remotes map which should
                                          be initialized in the git project. Projects
                                          must have at least one remote configured
                                          while StarterProjects & Image Component's
                                          Git source can only have at most one remote
                                          configured.
                                        type: object
                                    type: object
                                  rootRequired:
                                    description: "Specify if a privileged builder
                                      pod is required. \n Default value is `false`"
                                    type: boolean
                                  srcType:
                                    description: Type of Dockerfile src
                                    enum:
                                    - Uri
                                    - DevfileRegistry
                                    - Git
                                    type: string
                                  uri:
                                    description: URI Reference of a Dockerfile. It
                                      can be a full URL or a relative URI from the
                                      current devfile as the base URI.
                                    type: string
                                type: object
                              imageName:
                                description: Name of the image for the resulting outerloop
                                  build
                                type: string
                              imageType:
                                description: Type of image
                                enum:
                                - Dockerfile
                                - AutoBuild
                                type: string
                            type: object
                          kubernetes:
                            description: Allows importing into the devworkspace the
                              Kubernetes resources defined in a given manifest. For
                              example this allows reusing the Kubernetes definitions
                              used to deploy some runtime components in production.
                            oneOf:
                            - required:
                              - uri
                            - required:
                              - inlined
                            properties:
                              deployByDefault:
                                description: "Defines if the component should be deployed
                                  during startup. \n Default value is `false`"
                                type: boolean
                              endpoints:
                                items:
                                  properties:
                                    annotation:
                                      additionalProperties:
                                        type: string
                                      description: Annotations to be added to Kubernetes
                                        Ingress or Openshift Route
                                      type: object
                                    attributes:
                                      description: "Map of implementation-dependant
                                        string-based free-form attributes. \n Examples
                                        of Che-specific attributes: \n - cookiesAuthEnabled:
                                        \"true\" / \"false\", \n - type: \"terminal\"
                                        / \"ide\" / \"ide-dev\","
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    exposure:
                                      description: "Describes how the endpoint should
                                        be exposed on the network. \n - `public` means
                                        that the endpoint will be exposed on the public
                                        network, typically through a K8S ingress or
                                        an OpenShift route. \n - `internal` means
                                        that the endpoint will be exposed internally
                                        outside of the main devworkspace POD, typically
                                        by K8S services, to be consumed by other elements
                                        running on the same cloud internal network.
                                        \n - `none` means that the endpoint will not
                                        be exposed and will only be accessible inside
                                        the main devworkspace POD, on a local address.
                                        \n Default value is `public`"
                                      enum:
                                      - public
                                      - internal
                                      - none
                                      type: string
                                    name:
                                      maxLength: 63
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    path:
                                      description: Path of the endpoint URL
                                      type: string
                                    protocol:
                                      description: "Describes the application and
                                        transport protocols of the traffic that will
                                        go through this endpoint. \n - `http`: Endpoint
                                        will have `http` traffic, typically on a TCP
                                        connection. It will be automaticaly promoted
                                        to `https` when the `secure` field is set
                                        to `true`. \n - `https`: Endpoint will have
                                        `https` traffic, typically on a TCP connection.
                                        \n - `ws`: Endpoint will have `ws` traffic,
                                        typically on a TCP connection. It will be
                                        automaticaly promoted to `wss` when the `secure`
                                        field is set to `true`. \n - `wss`: Endpoint
                                        will have `wss` traffic, typically on a TCP
                                        connection. \n - `tcp`: Endpoint will have
                                        traffic on a TCP connection, without specifying
                                        an application protocol. \n - `udp`: Endpoint
                                        will have traffic on an UDP connection, without
                                        specifying an application protocol. \n Default
                                        value is `http`"
                                      enum:
                                      - http
                                      - https
                                      - ws
                                      - wss
                                      - tcp
                                      - udp
                                      type: string
                                    secure:
                                      description: Describes whether the endpoint
                                        should be secured and protected by some authentication
                                        process. This requires a protocol of `https`
                                        or `wss`.
                                      type: boolean
                                    targetPort:
                                      description: Port number to be used within the
                                        container component. The same port cannot
                                        be used by two different container components.
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                type: array
                              inlined:
                                description: Inlined manifest
                                type: string
                              locationType:
                                description: Type of Kubernetes-like location
                                enum:
                                - Uri
                                - Inlined
                                type: string
                              uri:
                                description: Location in a file fetched from a uri.
                                type: string
                            type: object
                          name:
                            description: Mandatory name that allows referencing the
                              component from other elements (such as commands) or
                              from an external devfile that may reference this component
                              through a parent or a plugin.
                            maxLength: 63
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          openshift:
                            description: Allows importing into the devworkspace the
                              OpenShift resources defined in a given manifest. For
                              example this allows reusing the OpenShift definitions
                              used to deploy some runtime components in production.
                            oneOf:
                            - required:
                              - uri
                            - required:
                              - inlined
                            properties:
                              deployByDefault:
                                description: "Defines if the component should be deployed
                                  during startup. \n Default value is `false`"
                                type: boolean
                              endpoints:
                                items:
                                  properties:
                                    annotation:
                                      additionalProperties:
                                        type: string
                                      description: Annotations to be added to Kubernetes
                                        Ingress or Openshift Route
                                      type: object
                                    attributes:
                                      description: "Map of implementation-dependant
                                        string-based free-form attributes. \n Examples
                                        of Che-specific attributes: \n - cookiesAuthEnabled:
                                        \"true\" / \"false\", \n - type: \"terminal\"
                                        / \"ide\" / \"ide-dev\","
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    exposure:
                                      description: "Describes how the endpoint should
                                        be exposed on the network. \n - `public` means
                                        that the endpoint will be exposed on the public
                                        network, typically through a K8S ingress or
                                        an OpenShift route. \n - `internal` means
                                        that the endpoint will be exposed internally
                                        outside of the main devworkspace POD, typically
                                        by K8S services, to be consumed by other elements
                                        running on the same cloud internal network.
                                        \n - `none` means that the endpoint will not
                                        be exposed and will only be accessible inside
                                        the main devworkspace POD, on a local address.
                                        \n Default value is `public`"
                                      enum:
                                      - public
                                      - internal
                                      - none
                                      type: string
                                    name:
                                      maxLength: 63
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    path:
                                      description: Path of the endpoint URL
                                      type: string
                                    protocol:
                                      description: "Describes the application and
                                        transport protocols of the traffic that will
                                        go through this endpoint. \n - `http`: Endpoint
                                        will have `http` traffic, typically on a TCP
                                        connection. It will be automaticaly promoted
                                        to `https` when the `secure` field is set
                                        to `true`. \n - `https`: Endpoint will have
                                        `https` traffic, typically on a TCP connection.
                                        \n - `ws`: Endpoint will have `ws` traffic,
                                        typically on a TCP connection. It will be
                                        automaticaly promoted to `wss` when the `secure`
                                        field is set to `true`. \n - `wss`: Endpoint
                                        will have `wss` traffic, typically on a TCP
                                        connection. \n - `tcp`: Endpoint will have
                                        traffic on a TCP connection, without specifying
                                        an application protocol. \n - `udp`: Endpoint
                                        will have traffic on an UDP connection, without
                                        specifying an application protocol. \n Default
                                        value is `http`"
                                      enum:
                                      - http
                                      - https
                                      - ws
                                      - wss
                                      - tcp
                                      - udp
                                      type: string
                                    secure:
                                      description: Describes whether the endpoint
                                        should be secured and protected by some authentication
                                        process. This requires a protocol of `https`
                                        or `wss`.
                                      type: boolean
                                    targetPort:
                                      description: Port number to be used within the
                                        container component. The same port cannot
                                        be used by two different container components.
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                type: array
                              inlined:
                                description: Inlined manifest
                                type: string
                              locationType:
                                description: Type of Kubernetes-like location
                                enum:
                                - Uri
                                - Inlined
                                type: string
                              uri:
                                description: Location in a file fetched from a uri.
                                type: string
                            type: object
                          volume:
                            description: Allows specifying the definition of a volume
                              shared by several other components
                            properties:
                              ephemeral:
                                description: Ephemeral volumes are not stored persistently
                                  across restarts. Defaults to false
                                type: boolean
                              size:
                                description: Size of the volume
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    id:
                      description: Id in a registry that contains a Devfile yaml file
                      type: string
                    importReferenceType:
                      description: type of location from where the referenced template
                        structure should be retrieved
                      enum:
                      - Uri
                      - Id
                      - Kubernetes
                      type: string
                    kubernetes:
                      description: Reference to a Kubernetes CRD of type DevWorkspaceTemplate
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                    name:
                      description: Mandatory name that allows referencing the component
                        from other elements (such as commands) or from an external
                        devfile that may reference this component through a parent
                        or a plugin.
                      maxLength: 63
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    registryUrl:
                      description: Registry URL to pull the parent devfile from when
                        using id in the parent reference. To ensure the parent devfile
                        gets resolved consistently in different environments, it is
                        recommended to always specify the `registryUrl` when `id`
                        is used.
                      type: string
                    uri:
                      description: URI Reference of a parent devfile YAML file. It
                        can be a full URL or a relative URI with the current devfile
                        as the base URI.
                      type: string
                    version:
                      description: Specific stack/sample version to pull the parent
                        devfile from, when using id in the parent reference. To specify
                        `version`, `id` must be defined and used as the import reference
                        source. `version` can be either a specific stack version,
                        or `latest`. If no `version` specified, default version will
                        be used.
                      pattern: ^(latest)|(([1-9])\.([0-9]+)\.([0-9]+)(\-[0-9a-z-]+(\.[0-9a-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)$
                      type: string
                  required:
                  - name
                  type: object
                type: array
              podSpecOverride:
                description: Pod fields to override within the DevWorkspace's Deployment.
                  Fields defined here are strategically merged on top of the Pod template
                  in the deployment, allowing for fine-grained customization of the
                  Pods that are started for this DevWorkspace.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: Subset of Pod Spec fields that can be overridden
                      in a DevWorkspace's deployment
                    properties:
                      activeDeadlineSeconds:
                        description: Optional duration in seconds the pod may be active
                          on the node relative to StartTime before the system will
                          actively try to mark it failed and kill associated containers.
                          Value must be a positive integer.
                        format: int64
                        type: integer
                      affinity:
                        description: If specified, the pod's scheduling constraints
                        properties:
                          nodeAffinity:
                            description: Describes node affinity scheduling rules
                              for the pod.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule
                                  pods to nodes that satisfy the affinity expressions
                                  specified by this field, but it may choose a node
                                  that violates one or more of the expressions. The
                                  node that is most preferred is the one with the
                                  greatest sum of weights, i.e. for each node that
                                  meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling affinity expressions,
                                  etc.), compute a sum by iterating through the elements
                                  of this field and adding "weight" to the sum if
                                  the node matches the corresponding matchExpressions;
                                  the node(s) with the highest sum are the most preferred.
                                items:
                                  description: An empty preferred scheduling term
                                    matches all objects with implicit weight 0 (i.e.
                                    it's a no-op). A null preferred scheduling term
                                    matches no objects (i.e. is also a no-op).
                                  properties:
                                    preference:
                                      description: A node selector term, associated
                                        with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    weight:
                                      description: Weight associated with matching
                                        the corresponding nodeSelectorTerm, in the
                                        range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - preference
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the
                                  affinity requirements specified by this field cease
                                  to be met at some point during pod execution (e.g.
                                  due to an update), the system may or may not try
                                  to eventually evict the pod from its node.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector
                                      terms. The terms are ORed.
                                    items:
                                      description: A null or empty node selector term
                                        matches no objects. The requirements of them
                                        are ANDed. The TopologySelectorTerm type implements
                                        a subset of the NodeSelectorTerm.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                required:
                                - nodeSelectorTerms
                                type: object
                            type: object
                          podAffinity:
                            description: Describes pod affinity scheduling rules (e.g.
                              co-locate this pod in the same node, zone, etc. as some
                              other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule
                                  pods to nodes that satisfy the affinity expressions
                                  specified by this field, but it may choose a node
                                  that violates one or more of the expressions. The
                                  node that is most preferred is the one with the
                                  greatest sum of weights, i.e. for each node that
                                  meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling affinity expressions,
                                  etc.), compute a sum by iterating through the elements
                                  of this field and adding "weight" to the sum if
                                  the node has pods which matches the corresponding
                                  podAffinityTerm; the node(s) with the highest sum
                                  are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm
                                    fields are added per-node to find the most preferred
                                    node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term,
                                        associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is alpha-level and is only
                                            honored when PodAffinityNamespaceSelector
                                            feature is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching
                                        the corresponding podAffinityTerm, in the
                                        range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the
                                  affinity requirements specified by this field cease
                                  to be met at some point during pod execution (e.g.
                                  due to a pod label update), the system may or may
                                  not try to eventually evict the pod from its node.
                                  When there are multiple elements, the lists of nodes
                                  corresponding to each podAffinityTerm are intersected,
                                  i.e. all terms must be satisfied.
                                items:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is alpha-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                          podAntiAffinity:
                            description: Describes pod anti-affinity scheduling rules
                              (e.g. avoid putting this pod in the same node, zone,
                              etc. as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule
                                  pods to nodes that satisfy the anti-affinity expressions
                                  specified by this field, but it may choose a node
                                  that violates one or more of the expressions. The
                                  node that is most preferred is the one with the
                                  greatest sum of weights, i.e. for each node that
                                  meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling anti-affinity
                                  expressions, etc.), compute a sum by iterating through
                                  the elements of this field and adding "weight" to
                                  the sum if the node has pods which matches the corresponding
                                  podAffinityTerm; the node(s) with the highest sum
                                  are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm
                                    fields are added per-node to find the most preferred
                                    node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term,
                                        associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is alpha-level and is only
                                            honored when PodAffinityNamespaceSelector
                                            feature is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching
                                        the corresponding podAffinityTerm, in the
                                        range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the anti-affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the
                                  anti-affinity requirements specified by this field
                                  cease to be met at some point during pod execution
                                  (e.g. due to a pod label update), the system may
                                  or may not try to eventually evict the pod from
                                  its node. When there are multiple elements, the
                                  lists of nodes corresponding to each podAffinityTerm
                                  are intersected, i.e. all terms must be satisfied.
                                items:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is alpha-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                        type: object
                      automountServiceAccountToken:
                        description: AutomountServiceAccountToken indicates whether
                          a service account token should be automatically mounted.
                        type: boolean
                      dnsConfig:
                        description: Specifies the DNS parameters of a pod. Parameters
                          specified here will be merged to the generated DNS configuration
                          based on DNSPolicy.
                        properties:
                          nameservers:
                            description: A list of DNS name server IP addresses. This
                              will be appended to the base nameservers generated from
                              DNSPolicy. Duplicated nameservers will be removed.
                            items:
                              type: string
                            type: array
                          options:
                            description: A list of DNS resolver options. This will
                              be merged with the base options generated from DNSPolicy.
                              Duplicated entries will be removed. Resolution options
                              given in Options will override those that appear in
                              the base DNSPolicy.
                            items:
                              description: PodDNSConfigOption defines DNS resolver
                                options of a pod.
                              properties:
                                name:
                                  description: Required.
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          searches:
                            description: A list of DNS search domains for host-name
                              lookup. This will be appended to the base search paths
                              generated from DNSPolicy. Duplicated search paths will
                              be removed.
                            items:
                              type: string
                            type: array
                        type: object
                      dnsPolicy:
                        description: Set DNS policy for the pod. Defaults to "ClusterFirst".
                          Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst',
                          'Default' or 'None'. DNS parameters given in DNSConfig will
                          be merged with the policy selected with DNSPolicy. To have
                          DNS options set along with hostNetwork, you have to specify
                          DNS policy explicitly to 'ClusterFirstWithHostNet'.
                        type: string
                      enableServiceLinks:
                        description: 'EnableServiceLinks indicates whether information
                          about services should be injected into pod''s environment
                          variables, matching the syntax of Docker links. Optional:
                          Defaults to true.'
                        type: boolean
                      hostAliases:
                        description: HostAliases is an optional list of hosts and
                          IPs that will be injected into the pod's hosts file if specified.
                          This is only valid for non-hostNetwork pods.
                        items:
                          description: HostAlias holds the mapping between IP and
                            hostnames that will be injected as an entry in the pod's
                            hosts file.
                          properties:
                            hostnames:
                              description: Hostnames for the above IP address.
                              items:
                                type: string
                              type: array
                            ip:
                              description: IP address of the host file entry.
                              type: string
                          type: object
                        type: array
                      hostIPC:
                        description: 'Use the host''s ipc namespace. Optional: Default
                          to false.'
                        type: boolean
                      hostNetwork:
                        description: Host networking requested for this pod. Use the
                          host's network namespace. If this option is set, the ports
                          that will be used must be specified. Default to false.
                        type: boolean
                      hostPID:
                        description: 'Use the host''s pid namespace. Optional: Default
                          to false.'
                        type: boolean
                      hostname:
                        description: Specifies the hostname of the Pod If not specified,
                          the pod's hostname will be set to a system-defined value.
                        type: string
                      imagePullSecrets:
                        description: 'ImagePullSecrets is an optional list of references
                          to secrets in the same namespace to use for pulling any
                          of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. For example, in the case of docker, only
                          DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      nodeName:
                        description: NodeName is a request to schedule this pod onto
                          a specific node. If it is non-empty, the scheduler simply
                          schedules this pod onto that node, assuming that it fits
                          resource requirements.
                        type: string
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: 'NodeSelector is a selector which must be true
                          for the pod to fit on a node. Selector which must match
                          a node''s labels for the pod to be scheduled on that node.
                          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                        type: object
                      overhead:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Overhead represents the resource overhead associated
                          with running a pod for a given RuntimeClass. This field
                          will be autopopulated at admission time by the RuntimeClass
                          admission controller. If the RuntimeClass admission controller
                          is enabled, overhead must not be set in Pod create requests.
                          The RuntimeClass admission controller will reject Pod create
                          requests which have the overhead already set. If RuntimeClass
                          is configured and selected in the PodSpec, Overhead will
                          be set to the value defined in the corresponding RuntimeClass,
                          otherwise it will remain unset and treated as zero. More
                          info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md
                          This field is alpha-level as of Kubernetes v1.16, and is
                          only honored by servers that enable the PodOverhead feature.'
                        type: object
                      preemptionPolicy:
                        description: PreemptionPolicy is the Policy for preempting
                          pods with lower priority. One of Never, PreemptLowerPriority.
                          Defaults to PreemptLowerPriority if unset. This field is
                          beta-level, gated by the NonPreemptingPriority feature-gate.
                        type: string
                      priority:
                        description: The priority value. Various system components
                          use this field to find the priority of the pod. When Priority
                          Admission Controller is enabled, it prevents users from
                          setting this field. The admission controller populates this
                          field from PriorityClassName. The higher the value, the
                          higher the priority.
                        format: int32
                        type: integer
                      priorityClassName:
                        description: If specified, indicates the pod's priority. "system-node-critical"
                          and "system-cluster-critical" are two special keywords which
                          indicate the highest priorities with the former being the
                          highest priority. Any other name must be defined by creating
                          a PriorityClass object with that name. If not specified,
                          the pod priority will be default or zero if there is no
                          default.
                        type: string
                      readinessGates:
                        description: 'If specified, all readiness gates will be evaluated
                          for pod readiness. A pod is ready when all its containers
                          are ready AND all conditions specified in the readiness
                          gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md'
                        items:
                          description: PodReadinessGate contains the reference to
                            a pod condition
                          properties:
                            conditionType:
                              description: ConditionType refers to a condition in
                                the pod's condition list with matching type.
                              type: string
                          required:
                          - conditionType
                          type: object
                        type: array
                      runtimeClassName:
                        description: 'RuntimeClassName refers to a RuntimeClass object
                          in the node.k8s.io group, which should be used to run this
                          pod.  If no RuntimeClass resource matches the named class,
                          the pod will not be run. If unset or empty, the "legacy"
                          RuntimeClass will be used, which is an implicit class with
                          an empty definition that uses the default runtime handler.
                          More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                          This is a beta feature as of Kubernetes v1.14.'
                        type: string
                      schedulerName:
                        description: If specified, the pod will be dispatched by specified
                          scheduler. If not specified, the pod will be dispatched
                          by default scheduler.
                        type: string
                      securityContext:
                        description: 'SecurityContext holds pod-level security attributes
                          and common container settings. Optional: Defaults to empty.  See
                          type description for default values of each field.'
                        properties:
                          fsGroup:
                            description: "A special supplemental group that applies
                              to all containers in a pod. Some volume types allow
                              the Kubelet to change the ownership of that volume to
                              be owned by the pod: \n 1. The owning GID will be the
                              FSGroup 2. The setgid bit is set (new files created
                              in the volume will be owned by FSGroup) 3. The permission
                              bits are OR'd with rw-rw---- \n If unset, the Kubelet
                              will not modify the ownership and permissions of any
                              volume."
                            format: int64
                            type: integer
                          fsGroupChangePolicy:
                            description: 'fsGroupChangePolicy defines behavior of
                              changing ownership and permission of the volume before
                              being exposed inside Pod. This field will only apply
                              to volume types which support fsGroup based ownership(and
                              permissions). It will have no effect on ephemeral volume
                              types such as: secret, configmaps and emptydir. Valid
                              values are "OnRootMismatch" and "Always". If not specified,
                              "Always" is used.'
                            type: string
                          runAsGroup:
                            description: The GID to run the entrypoint of the container
                              process. Uses runtime default if unset. May also be
                              set in SecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence for that container.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: Indicates that the container must run as
                              a non-root user. If true, the Kubelet will validate
                              the image at runtime to ensure that it does not run
                              as UID 0 (root) and fail to start the container if it
                              does. If unset or false, no such validation will be
                              performed. May also be set in SecurityContext.  If set
                              in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in SecurityContext.  If
                              set in both SecurityContext and PodSecurityContext,
                              the value specified in SecurityContext takes precedence
                              for that container.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: The SELinux context to be applied to all
                              containers. If unspecified, the container runtime will
                              allocate a random SELinux context for each container.  May
                              also be set in SecurityContext.  If set in both SecurityContext
                              and PodSecurityContext, the value specified in SecurityContext
                              takes precedence for that container.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: The seccomp options to use by the containers
                              in this pod.
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile
                                  defined in a file on the node should be used. The
                                  profile must be preconfigured on the node to work.
                                  Must be a descending path, relative to the kubelet's
                                  configured seccomp profile location. Must only be
                                  set if type is "Localhost".
                                type: string
                              type:
                                description: "type indicates which kind of seccomp
                                  profile will be applied. Valid options are: \n Localhost
                                  - a profile defined in a file on the node should
                                  be used. RuntimeDefault - the container runtime
                                  default profile should be used. Unconfined - no
                                  profile should be applied."
                                type: string
                            required:
                            - type
                            type: object
                          supplementalGroups:
                            description: A list of groups applied to the first process
                              run in each container, in addition to the container's
                              primary GID.  If unspecified, no groups will be added
                              to any container.
                            items:
                              format: int64
                              type: integer
                            type: array
                          sysctls:
                            description: Sysctls hold a list of namespaced sysctls
                              used for the pod. Pods with unsupported sysctls (by
                              the container runtime) might fail to launch.
                            items:
                              description: Sysctl defines a kernel parameter to be
                                set
                              properties:
                                name:
                                  description: Name of a property to set
                                  type: string
                                value:
                                  description: Value of a property to set
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          windowsOptions:
                            description: The Windows specific settings applied to
                              all containers. If unspecified, the options within a
                              container's SecurityContext will be used. If set in
                              both SecurityContext and PodSecurityContext, the value
                              specified in SecurityContext takes precedence.
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA
                                  admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                  inlines the contents of the GMSA credential spec
                                  named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint
                                  of the container process. Defaults to the user specified
                                  in image metadata if unspecified. May also be set
                                  in PodSecurityContext. If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                type: string
                            type: object
                        type: object
                      serviceAccountName:
                        description: 'ServiceAccountName is the name of the ServiceAccount
                          to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                        type: string
                      setHostnameAsFQDN:
                        description: If true the pod's hostname will be configured
                          as the pod's FQDN, rather than the leaf name (the default).
                          In Linux containers, this means setting the FQDN in the
                          hostname field of the kernel (the nodename field of struct
                          utsname). In Windows containers, this means setting the
                          registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                          to FQDN. If a pod does not have FQDN, this has no effect.
                          Default to false.
                        type: boolean
                      shareProcessNamespace:
                        description: 'Share a single process namespace between all
                          of the containers in a pod. When this is set containers
                          will be able to view and signal processes from other containers
                          in the same pod, and the first process in each container
                          will not be assigned PID 1. HostPID and ShareProcessNamespace
                          cannot both be set. Optional: Default to false.'
                        type: boolean
                      subdomain:
                        description: If specified, the fully qualified Pod hostname
                          will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster
                          domain>". If not specified, the pod will not have a domainname
                          at all.
                        type: string
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully. May be decreased in delete request.
                          Value must be non-negative integer. The value zero indicates
                          stop immediately via the kill signal (no opportunity to
                          shut down). If this value is nil, the default grace period
                          will be used instead. The grace period is the duration in
                          seconds after the processes running in the pod are sent
                          a termination signal and the time when the processes are
                          forcibly halted with a kill signal. Set this value longer
                          than the expected cleanup time for your process. Defaults
                          to 30 seconds.
                        format: int64
                        type: integer
                      tolerations:
                        description: If specified, the pod's tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                      topologySpreadConstraints:
                        description: TopologySpreadConstraints describes how a group
                          of pods ought to spread across topology domains. Scheduler
                          will schedule pods in a way which abides by the constraints.
                          All topologySpreadConstraints are ANDed.
                        items:
                          description: TopologySpreadConstraint specifies how to spread
                            matching pods among the given topology.
                          properties:
                            labelSelector:
                              description: LabelSelector is used to find matching
                                pods. Pods that match this label selector are counted
                                to determine the number of pods in their corresponding
                                topology domain.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            maxSkew:
                              description: 'MaxSkew describes the degree to which
                                pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                it is the maximum permitted difference between the
                                number of matching pods in the target topology and
                                the global minimum. For example, in a 3-zone cluster,
                                MaxSkew is set to 1, and pods with the same labelSelector
                                spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       |
                                - if MaxSkew is 1, incoming pod can only be scheduled
                                to zone3 to become 1/1/1; scheduling it onto zone1(zone2)
                                would make the ActualSkew(2-0) on zone1(zone2) violate
                                MaxSkew(1). - if MaxSkew is 2, incoming pod can be
                                scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                it is used to give higher precedence to topologies
                                that satisfy it. It''s a required field. Default value
                                is 1 and 0 is not allowed.'
                              format: int32
                              type: integer
                            topologyKey:
                              description: TopologyKey is the key of node labels.
                                Nodes that have a label with this key and identical
                                values are considered to be in the same topology.
                                We consider each <key, value> as a "bucket", and try
                                to put balanced number of pods into each bucket. It's
                                a required field.
                              type: string
                            whenUnsatisfiable:
                              description: 'WhenUnsatisfiable indicates how to deal
                                with a pod if it doesn''t satisfy the spread constraint.
                                - DoNotSchedule (default) tells the scheduler not
                                to schedule it. - ScheduleAnyway tells the scheduler
                                to schedule the pod in any location,   but giving
                                higher precedence to topologies that would help reduce
                                the   skew. A constraint is considered "Unsatisfiable"
                                for an incoming pod if and only if every possible
                                node assigment for that pod would violate "MaxSkew"
                                on some topology. For example, in a 3-zone cluster,
                                MaxSkew is set to 1, and pods with the same labelSelector
                                spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P
                                |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule,
                                incoming pod can only be scheduled to zone2(zone3)
                                to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3)
                                satisfies MaxSkew(1). In other words, the cluster
                                can still be imbalanced, but scheduler won''t make
                                it *more* imbalanced. It''s a required field.'
                              type: string
                          required:
                          - maxSkew
                          - topologyKey
                          - whenUnsatisfiable
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - topologyKey
                        - whenUnsatisfiable
                        x-kubernetes-list-type: map
                    type: object
                type: object
              routingClass:
                type: string
              started:
                type: boolean
              template:
                description: Structure of the devworkspace. This is also the specification
                  of a devworkspace template.
                properties:
                  attributes:
                    description: Map of implementation-dependant free-form YAML attributes.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  commands:
                    description: Predefined, ready-to-use, devworkspace-related commands
                    items:
                      oneOf:
                      - required:
                        - exec
                      - required:
                        - apply
                      - required:
                        - composite
                      - required:
                        - custom
                      properties:
                        apply:
                          description: "Command that consists in applying a given
                            component definition, typically bound to a devworkspace
                            event. \n For example, when an `apply` command is bound
                            to a `preStart` event, and references a `container` component,
                            it will start the container as a K8S initContainer in
                            the devworkspace POD, unless the component has its `dedicatedPod`
                            field set to `true`. \n When no `apply` command exist
                            for a given component, it is assumed the component will
                            be applied at devworkspace start by default, unless `deployByDefault`
                            for that component is set to false."
                          properties:
                            component:
                              description: Describes component that will be applied
                              type: string
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  - deploy
                                  type: string
                              required:
                              - kind
                              type: object
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                          required:
                          - component
                          type: object
                        attributes:
                          description: Map of implementation-dependant free-form YAML
                            attributes.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        commandType:
                          description: Type of devworkspace command
                          enum:
                          - Exec
                          - Apply
                          - Composite
                          - Custom
                          type: string
                        composite:
                          description: Composite command that allows executing several
                            sub-commands either sequentially or concurrently
                          properties:
                            commands:
                              description: The commands that comprise this composite
                                command
                              items:
                                type: string
                              type: array
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  - deploy
                                  type: string
                              required:
                              - kind
                              type: object
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                            parallel:
                              description: Indicates if the sub-commands should be
                                executed concurrently
                              type: boolean
                          type: object
                        custom:
                          description: Custom command whose logic is implementation-dependant
                            and should be provided by the user possibly through some
                            dedicated plugin
                          properties:
                            commandClass:
                              description: Class of command that the associated implementation
                                component should use to process this command with
                                the appropriate logic
                              type: string
                            embeddedResource:
                              description: Additional free-form configuration for
                                this custom command that the implementation component
                                will know how to use
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  - deploy
                                  type: string
                              required:
                              - kind
                              type: object
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                          required:
                          - commandClass
                          - embeddedResource
                          type: object
                        exec:
                          description: CLI Command executed in an existing component
                            container
                          properties:
                            commandLine:
                              description: "The actual command-line string \n Special
                                variables that can be used: \n  - `$PROJECTS_ROOT`:
                                A path where projects sources are mounted as defined
                                by container component's sourceMapping. \n  - `$PROJECT_SOURCE`:
                                A path to a project source ($PROJECTS_ROOT/<project-name>).
                                If there are multiple projects, this will point to
                                the directory of the first one."
                              type: string
                            component:
                              description: Describes component to which given action
                                relates
                              type: string
                            env:
                              description: Optional list of environment variables
                                that have to be set before running the command
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            group:
                              description: Defines the group this command is part
                                of
                              properties:
                                isDefault:
                                  description: Identifies the default command for
                                    a given group kind
                                  type: boolean
                                kind:
                                  description: Kind of group the command is part of
                                  enum:
                                  - build
                                  - run
                                  - test
                                  - debug
                                  - deploy
                                  type: string
                              required:
                              - kind
                              type: object
                            hotReloadCapable:
                              description: "Whether the command is capable to reload
                                itself when source code changes. If set to `true`
                                the command won't be restarted and it is expected
                                to handle file changes on its own. \n Default value
                                is `false`"
                              type: boolean
                            label:
                              description: Optional label that provides a label for
                                this command to be used in Editor UI menus for example
                              type: string
                            workingDir:
                              description: "Working directory where the command should
                                be executed \n Special variables that can be used:
                                \n  - `$PROJECTS_ROOT`: A path where projects sources
                                are mounted as defined by container component's sourceMapping.
                                \n  - `$PROJECT_SOURCE`: A path to a project source
                                ($PROJECTS_ROOT/<project-name>). If there are multiple
                                projects, this will point to the directory of the
                                first one."
                              type: string
                          required:
                          - commandLine
                          - component
                          type: object
                        id:
                          description: Mandatory identifier that allows referencing
                            this command in composite commands, from a parent, or
                            in events.
                          maxLength: 63
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  components:
                    description: List of the devworkspace components, such as editor
                      and plugins, user-provided containers, or other types of components
                    items:
                      oneOf:
                      - required:
                        - container
                      - required:
                        - kubernetes
                      - required:
                        - openshift
                      - required:
                        - volume
                      - required:
                        - image
                      - required:
                        - plugin
                      - required:
                        - custom
                      properties:
                        attributes:
                          description: Map of implementation-dependant free-form YAML
                            attributes.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        componentType:
                          description: Type of component
                          enum:
                          - Container
                          - Kubernetes
                          - Openshift
                          - Volume
                          - Image
                          - Plugin
                          - Custom
                          type: string
                        container:
                          description: Allows adding and configuring devworkspace-related
                            containers
                          properties:
                            annotation:
                              description: Annotations that should be added to specific
                                resources for this container
                              properties:
                                deployment:
                                  additionalProperties:
                                    type: string
                                  description: Annotations to be added to deployment
                                  type: object
                                service:
                                  additionalProperties:
                                    type: string
                                  description: Annotations to be added to service
                                  type: object
                              type: object
                            args:
                              description: "The arguments to supply to the command
                                running the dockerimage component. The arguments are
                                supplied either to the default command provided in
                                the image or to the overridden command. \n Defaults
                                to an empty array, meaning use whatever is defined
                                in the image."
                              items:
                                type: string
                              type: array
                            command:
                              description: "The command to run in the dockerimage
                                component instead of the default one provided in the
                                image. \n Defaults to an empty array, meaning use
                                whatever is defined in the image."
                              items:
                                type: string
                              type: array
                            cpuLimit:
                              type: string
                            cpuRequest:
                              type: string
                            dedicatedPod:
                              description: "Specify if a container should run in its
                                own separated pod, instead of running as part of the
                                main development environment pod. \n Default value
                                is `false`"
                              type: boolean
                            endpoints:
                              items:
                                properties:
                                  annotation:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to be added to Kubernetes
                                      Ingress or Openshift Route
                                    type: object
                                  attributes:
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main devworkspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      devworkspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    enum:
                                    - http
                                    - https
                                    - ws
                                    - wss
                                    - tcp
                                    - udp
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process. This requires a protocol of `https`
                                      or `wss`.
                                    type: boolean
                                  targetPort:
                                    description: Port number to be used within the
                                      container component. The same port cannot be
                                      used by two different container components.
                                    type: integer
                                required:
                                - name
                                - targetPort
                                type: object
                              type: array
                            env:
                              description: "Environment variables used in this container.
                                \n The following variables are reserved and cannot
                                be overridden via env: \n  - `$PROJECTS_ROOT` \n  -
                                `$PROJECT_SOURCE`"
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            image:
                              type: string
                            memoryLimit:
                              type: string
                            memoryRequest:
                              type: string
                            mountSources:
                              description: "Toggles whether or not the project source
                                code should be mounted in the component. \n Defaults
                                to true for all component types except plugins and
                                components that set `dedicatedPod` to true."
                              type: boolean
                            sourceMapping:
                              description: Optional specification of the path in the
                                container where project sources should be transferred/mounted
                                when `mountSources` is `true`. When omitted, the default
                                value of /projects is used.
                              type: string
                            volumeMounts:
                              description: List of volumes mounts that should be mounted
                                is this container.
                              items:
                                description: Volume that should be mounted to a component
                                  container
                                properties:
                                  name:
                                    description: The volume mount name is the name
                                      of an existing `Volume` component. If several
                                      containers mount the same volume name then they
                                      will reuse the same volume and will be able
                                      to access to the same files.
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  path:
                                    description: The path in the component container
                                      where the volume should be mounted. If not path
                                      is mentioned, default path is the is `/<name>`.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - image
                          type: object
                        custom:
                          description: Custom component whose logic is implementation-dependant
                            and should be provided by the user possibly through some
                            dedicated controller
                          properties:
                            componentClass:
                              description: Class of component that the associated
                                implementation controller should use to process this
                                command with the appropriate logic
                              type: string
                            embeddedResource:
                              description: Additional free-form configuration for
                                this custom component that the implementation controller
                                will know how to use
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - componentClass
                          - embeddedResource
                          type: object
                        image:
                          description: Allows specifying the definition of an image
                            for outer loop builds
                          oneOf:
                          - required:
                            - dockerfile
                          properties:
                            autoBuild:
                              description: "Defines if the image should be built during
                                startup. \n Default value is `false`"
                              type: boolean
                            dockerfile:
                              description: Allows specifying dockerfile type build
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - devfileRegistry
                              - required:
                                - git
                              properties:
                                args:
                                  description: The arguments to supply to the dockerfile
                                    build.
                                  items:
                                    type: string
                                  type: array
                                buildContext:
                                  description: Path of source directory to establish
                                    build context. Defaults to ${PROJECT_SOURCE} in
                                    the container
                                  type: string
                                devfileRegistry:
                                  description: Dockerfile's Devfile Registry source
                                  properties:
                                    id:
                                      description: Id in a devfile registry that contains
                                        a Dockerfile. The src in the OCI registry
                                        required for the Dockerfile build will be
                                        downloaded for building the image.
                                      type: string
                                    registryUrl:
                                      description: Devfile Registry URL to pull the
                                        Dockerfile from when using the Devfile Registry
                                        as Dockerfile src. To ensure the Dockerfile
                                        gets resolved consistently in different environments,
                                        it is recommended to always specify the `devfileRegistryUrl`
                                        when `Id` is used.
                                      type: string
                                  required:
                                  - id
                                  type: object
                                git:
                                  description: Dockerfile's Git source
                                  properties:
                                    checkoutFrom:
                                      description: Defines from what the project should
                                        be checked out. Required if there are more
                                        than one remote configured
                                      properties:
                                        remote:
                                          description: The remote name should be used
                                            as init. Required if there are more than
                                            one remote configured
                                          type: string
                                        revision:
                                          description: The revision to checkout from.
                                            Should be branch name, tag or commit id.
                                            Default branch is used if missing or specified
                                            revision is not found.
                                          type: string
                                      type: object
                                    fileLocation:
                                      description: Location of the Dockerfile in the
                                        Git repository when using git as Dockerfile
                                        src. Defaults to Dockerfile.
                                      type: string
                                    remotes:
                                      additionalProperties:
                                        type: string
                                      description: The remotes map which should be
                                        initialized in the git project. Projects must
                                        have at least one remote configured while
                                        StarterProjects & Image Component's Git source
                                        can only have at most one remote configured.
                                      type: object
                                  required:
                                  - remotes
                                  type: object
                                rootRequired:
                                  description: "Specify if a privileged builder pod
                                    is required. \n Default value is `false`"
                                  type: boolean
                                srcType:
                                  description: Type of Dockerfile src
                                  enum:
                                  - Uri
                                  - DevfileRegistry
                                  - Git
                                  type: string
                                uri:
                                  description: URI Reference of a Dockerfile. It can
                                    be a full URL or a relative URI from the current
                                    devfile as the base URI.
                                  type: string
                              type: object
                            imageName:
                              description: Name of the image for the resulting outerloop
                                build
                              type: string
                            imageType:
                              description: Type of image
                              enum:
                              - Dockerfile
                              type: string
                          required:
                          - imageName
                          type: object
                        kubernetes:
                          description: Allows importing into the devworkspace the
                            Kubernetes resources defined in a given manifest. For
                            example this allows reusing the Kubernetes definitions
                            used to deploy some runtime components in production.
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            deployByDefault:
                              description: "Defines if the component should be deployed
                                during startup. \n Default value is `false`"
                              type: boolean
                            endpoints:
                              items:
                                properties:
                                  annotation:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to be added to Kubernetes
                                      Ingress or Openshift Route
                                    type: object
                                  attributes:
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main devworkspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      devworkspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    enum:
                                    - http
                                    - https
                                    - ws
                                    - wss
                                    - tcp
                                    - udp
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process. This requires a protocol of `https`
                                      or `wss`.
                                    type: boolean
                                  targetPort:
                                    description: Port number to be used within the
                                      container component. The same port cannot be
                                      used by two different container components.
                                    type: integer
                                required:
                                - name
                                - targetPort
                                type: object
                              type: array
                            inlined:
                              description: Inlined manifest
                              type: string
                            locationType:
                              description: Type of Kubernetes-like location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            uri:
                              description: Location in a file fetched from a uri.
                              type: string
                          type: object
                        name:
                          description: Mandatory name that allows referencing the
                            component from other elements (such as commands) or from
                            an external devfile that may reference this component
                            through a parent or a plugin.
                          maxLength: 63
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        openshift:
                          description: Allows importing into the devworkspace the
                            OpenShift resources defined in a given manifest. For example
                            this allows reusing the OpenShift definitions used to
                            deploy some runtime components in production.
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - inlined
                          properties:
                            deployByDefault:
                              description: "Defines if the component should be deployed
                                during startup. \n Default value is `false`"
                              type: boolean
                            endpoints:
                              items:
                                properties:
                                  annotation:
                                    additionalProperties:
                                      type: string
                                    description: Annotations to be added to Kubernetes
                                      Ingress or Openshift Route
                                    type: object
                                  attributes:
                                    description: "Map of implementation-dependant
                                      string-based free-form attributes. \n Examples
                                      of Che-specific attributes: \n - cookiesAuthEnabled:
                                      \"true\" / \"false\", \n - type: \"terminal\"
                                      / \"ide\" / \"ide-dev\","
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  exposure:
                                    description: "Describes how the endpoint should
                                      be exposed on the network. \n - `public` means
                                      that the endpoint will be exposed on the public
                                      network, typically through a K8S ingress or
                                      an OpenShift route. \n - `internal` means that
                                      the endpoint will be exposed internally outside
                                      of the main devworkspace POD, typically by K8S
                                      services, to be consumed by other elements running
                                      on the same cloud internal network. \n - `none`
                                      means that the endpoint will not be exposed
                                      and will only be accessible inside the main
                                      devworkspace POD, on a local address. \n Default
                                      value is `public`"
                                    enum:
                                    - public
                                    - internal
                                    - none
                                    type: string
                                  name:
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  path:
                                    description: Path of the endpoint URL
                                    type: string
                                  protocol:
                                    description: "Describes the application and transport
                                      protocols of the traffic that will go through
                                      this endpoint. \n - `http`: Endpoint will have
                                      `http` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `https`
                                      when the `secure` field is set to `true`. \n
                                      - `https`: Endpoint will have `https` traffic,
                                      typically on a TCP connection. \n - `ws`: Endpoint
                                      will have `ws` traffic, typically on a TCP connection.
                                      It will be automaticaly promoted to `wss` when
                                      the `secure` field is set to `true`. \n - `wss`:
                                      Endpoint will have `wss` traffic, typically
                                      on a TCP connection. \n - `tcp`: Endpoint will
                                      have traffic on a TCP connection, without specifying
                                      an application protocol. \n - `udp`: Endpoint
                                      will have traffic on an UDP connection, without
                                      specifying an application protocol. \n Default
                                      value is `http`"
                                    enum:
                                    - http
                                    - https
                                    - ws
                                    - wss
                                    - tcp
                                    - udp
                                    type: string
                                  secure:
                                    description: Describes whether the endpoint should
                                      be secured and protected by some authentication
                                      process. This requires a protocol of `https`
                                      or `wss`.
                                    type: boolean
                                  targetPort:
                                    description: Port number to be used within the
                                      container component. The same port cannot be
                                      used by two different container components.
                                    type: integer
                                required:
                                - name
                                - targetPort
                                type: object
                              type: array
                            inlined:
                              description: Inlined manifest
                              type: string
                            locationType:
                              description: Type of Kubernetes-like location
                              enum:
                              - Uri
                              - Inlined
                              type: string
                            uri:
                              description: Location in a file fetched from a uri.
                              type: string
                          type: object
                        plugin:
                          description: "Allows importing a plugin. \n Plugins are
                            mainly imported devfiles that contribute components, commands
                            and events as a consistent single unit. They are defined
                            in either YAML files following the devfile syntax, or
                            as `DevWorkspaceTemplate` Kubernetes Custom Resources"
                          oneOf:
                          - required:
                            - uri
                          - required:
                            - id
                          - required:
                            - kubernetes
                          properties:
                            commands:
                              description: Overrides of commands encapsulated in a
                                parent devfile or a plugin. Overriding is done according
                                to K8S strategic merge patch standard rules.
                              items:
                                oneOf:
                                - required:
                                  - exec
                                - required:
                                  - apply
                                - required:
                                  - composite
                                properties:
                                  apply:
                                    description: "Command that consists in applying
                                      a given component definition, typically bound
                                      to a devworkspace event. \n For example, when
                                      an `apply` command is bound to a `preStart`
                                      event, and references a `container` component,
                                      it will start the container as a K8S initContainer
                                      in the devworkspace POD, unless the component
                                      has its `dedicatedPod` field set to `true`.
                                      \n When no `apply` command exist for a given
                                      component, it is assumed the component will
                                      be applied at devworkspace start by default,
                                      unless `deployByDefault` for that component
                                      is set to false."
                                    properties:
                                      component:
                                        description: Describes component that will
                                          be applied
                                        type: string
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            - deploy
                                            type: string
                                        type: object
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                    type: object
                                  attributes:
                                    description: Map of implementation-dependant free-form
                                      YAML attributes.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  commandType:
                                    description: Type of devworkspace command
                                    enum:
                                    - Exec
                                    - Apply
                                    - Composite
                                    type: string
                                  composite:
                                    description: Composite command that allows executing
                                      several sub-commands either sequentially or
                                      concurrently
                                    properties:
                                      commands:
                                        description: The commands that comprise this
                                          composite command
                                        items:
                                          type: string
                                        type: array
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            - deploy
                                            type: string
                                        type: object
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                      parallel:
                                        description: Indicates if the sub-commands
                                          should be executed concurrently
                                        type: boolean
                                    type: object
                                  exec:
                                    description: CLI Command executed in an existing
                                      component container
                                    properties:
                                      commandLine:
                                        description: "The actual command-line string
                                          \n Special variables that can be used: \n
                                          \ - `$PROJECTS_ROOT`: A path where projects
                                          sources are mounted as defined by container
                                          component's sourceMapping. \n  - `$PROJECT_SOURCE`:
                                          A path to a project source ($PROJECTS_ROOT/<project-name>).
                                          If there are multiple projects, this will
                                          point to the directory of the first one."
                                        type: string
                                      component:
                                        description: Describes component to which
                                          given action relates
                                        type: string
                                      env:
                                        description: Optional list of environment
                                          variables that have to be set before running
                                          the command
                                        items:
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      group:
                                        description: Defines the group this command
                                          is part of
                                        properties:
                                          isDefault:
                                            description: Identifies the default command
                                              for a given group kind
                                            type: boolean
                                          kind:
                                            description: Kind of group the command
                                              is part of
                                            enum:
                                            - build
                                            - run
                                            - test
                                            - debug
                                            - deploy
                                            type: string
                                        type: object
                                      hotReloadCapable:
                                        description: "Whether the command is capable
                                          to reload itself when source code changes.
                                          If set to `true` the command won't be restarted
                                          and it is expected to handle file changes
                                          on its own. \n Default value is `false`"
                                        type: boolean
                                      label:
                                        description: Optional label that provides
                                          a label for this command to be used in Editor
                                          UI menus for example
                                        type: string
                                      workingDir:
                                        description: "Working directory where the
                                          command should be executed \n Special variables
                                          that can be used: \n  - `$PROJECTS_ROOT`:
                                          A path where projects sources are mounted
                                          as defined by container component's sourceMapping.
                                          \n  - `$PROJECT_SOURCE`: A path to a project
                                          source ($PROJECTS_ROOT/<project-name>).
                                          If there are multiple projects, this will
                                          point to the directory of the first one."
                                        type: string
                                    type: object
                                  id:
                                    description: Mandatory identifier that allows
                                      referencing this command in composite commands,
                                      from a parent, or in events.
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - id
                                type: object
                              type: array
                            components:
                              description: Overrides of components encapsulated in
                                a parent devfile or a plugin. Overriding is done according
                                to K8S strategic merge patch standard rules.
                              items:
                                oneOf:
                                - required:
                                  - container
                                - required:
                                  - kubernetes
                                - required:
                                  - openshift
                                - required:
                                  - volume
                                - required:
                                  - image
                                properties:
                                  attributes:
                                    description: Map of implementation-dependant free-form
                                      YAML attributes.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  componentType:
                                    description: Type of component
                                    enum:
                                    - Container
                                    - Kubernetes
                                    - Openshift
                                    - Volume
                                    - Image
                                    type: string
                                  container:
                                    description: Allows adding and configuring devworkspace-related
                                      containers
                                    properties:
                                      annotation:
                                        description: Annotations that should be added
                                          to specific resources for this container
                                        properties:
                                          deployment:
                                            additionalProperties:
                                              type: string
                                            description: Annotations to be added to
                                              deployment
                                            type: object
                                          service:
                                            additionalProperties:
                                              type: string
                                            description: Annotations to be added to
                                              service
                                            type: object
                                        type: object
                                      args:
                                        description: "The arguments to supply to the
                                          command running the dockerimage component.
                                          The arguments are supplied either to the
                                          default command provided in the image or
                                          to the overridden command. \n Defaults to
                                          an empty array, meaning use whatever is
                                          defined in the image."
                                        items:
                                          type: string
                                        type: array
                                      command:
                                        description: "The command to run in the dockerimage
                                          component instead of the default one provided
                                          in the image. \n Defaults to an empty array,
                                          meaning use whatever is defined in the image."
                                        items:
                                          type: string
                                        type: array
                                      cpuLimit:
                                        type: string
                                      cpuRequest:
                                        type: string
                                      dedicatedPod:
                                        description: "Specify if a container should
                                          run in its own separated pod, instead of
                                          running as part of the main development
                                          environment pod. \n Default value is `false`"
                                        type: boolean
                                      endpoints:
                                        items:
                                          properties:
                                            annotation:
                                              additionalProperties:
                                                type: string
                                              description: Annotations to be added
                                                to Kubernetes Ingress or Openshift
                                                Route
                                              type: object
                                            attributes:
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main devworkspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main devworkspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              maxLength: 63
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              enum:
                                              - http
                                              - https
                                              - ws
                                              - wss
                                              - tcp
                                              - udp
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process. This
                                                requires a protocol of `https` or
                                                `wss`.
                                              type: boolean
                                            targetPort:
                                              description: Port number to be used
                                                within the container component. The
                                                same port cannot be used by two different
                                                container components.
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      env:
                                        description: "Environment variables used in
                                          this container. \n The following variables
                                          are reserved and cannot be overridden via
                                          env: \n  - `$PROJECTS_ROOT` \n  - `$PROJECT_SOURCE`"
                                        items:
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      image:
                                        type: string
                                      memoryLimit:
                                        type: string
                                      memoryRequest:
                                        type: string
                                      mountSources:
                                        description: "Toggles whether or not the project
                                          source code should be mounted in the component.
                                          \n Defaults to true for all component types
                                          except plugins and components that set `dedicatedPod`
                                          to true."
                                        type: boolean
                                      sourceMapping:
                                        description: Optional specification of the
                                          path in the container where project sources
                                          should be transferred/mounted when `mountSources`
                                          is `true`. When omitted, the default value
                                          of /projects is used.
                                        type: string
                                      volumeMounts:
                                        description: List of volumes mounts that should
                                          be mounted is this container.
                                        items:
                                          description: Volume that should be mounted
                                            to a component container
                                          properties:
                                            name:
                                              description: The volume mount name is
                                                the name of an existing `Volume` component.
                                                If several containers mount the same
                                                volume name then they will reuse the
                                                same volume and will be able to access
                                                to the same files.
                                              maxLength: 63
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                            path:
                                              description: The path in the component
                                                container where the volume should
                                                be mounted. If not path is mentioned,
                                                default path is the is `/<name>`.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                    type: object
                                  image:
                                    description: Allows specifying the definition
                                      of an image for outer loop builds
                                    oneOf:
                                    - required:
                                      - dockerfile
                                    - required:
                                      - autoBuild
                                    properties:
                                      autoBuild:
                                        description: "Defines if the image should
                                          be built during startup. \n Default value
                                          is `false`"
                                        type: boolean
                                      dockerfile:
                                        description: Allows specifying dockerfile
                                          type build
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - devfileRegistry
                                        - required:
                                          - git
                                        properties:
                                          args:
                                            description: The arguments to supply to
                                              the dockerfile build.
                                            items:
                                              type: string
                                            type: array
                                          buildContext:
                                            description: Path of source directory
                                              to establish build context. Defaults
                                              to ${PROJECT_SOURCE} in the container
                                            type: string
                                          devfileRegistry:
                                            description: Dockerfile's Devfile Registry
                                              source
                                            properties:
                                              id:
                                                description: Id in a devfile registry
                                                  that contains a Dockerfile. The
                                                  src in the OCI registry required
                                                  for the Dockerfile build will be
                                                  downloaded for building the image.
                                                type: string
                                              registryUrl:
                                                description: Devfile Registry URL
                                                  to pull the Dockerfile from when
                                                  using the Devfile Registry as Dockerfile
                                                  src. To ensure the Dockerfile gets
                                                  resolved consistently in different
                                                  environments, it is recommended
                                                  to always specify the `devfileRegistryUrl`
                                                  when `Id` is used.
                                                type: string
                                            type: object
                                          git:
                                            description: Dockerfile's Git source
                                            properties:
                                              checkoutFrom:
                                                description: Defines from what the
                                                  project should be checked out. Required
                                                  if there are more than one remote
                                                  configured
                                                properties:
                                                  remote:
                                                    description: The remote name should
                                                      be used as init. Required if
                                                      there are more than one remote
                                                      configured
                                                    type: string
                                                  revision:
                                                    description: The revision to checkout
                                                      from. Should be branch name,
                                                      tag or commit id. Default branch
                                                      is used if missing or specified
                                                      revision is not found.
                                                    type: string
                                                type: object
                                              fileLocation:
                                                description: Location of the Dockerfile
                                                  in the Git repository when using
                                                  git as Dockerfile src. Defaults
                                                  to Dockerfile.
                                                type: string
                                              remotes:
                                                additionalProperties:
                                                  type: string
                                                description: The remotes map which
                                                  should be initialized in the git
                                                  project. Projects must have at least
                                                  one remote configured while StarterProjects
                                                  & Image Component's Git source can
                                                  only have at most one remote configured.
                                                type: object
                                            type: object
                                          rootRequired:
                                            description: "Specify if a privileged
                                              builder pod is required. \n Default
                                              value is `false`"
                                            type: boolean
                                          srcType:
                                            description: Type of Dockerfile src
                                            enum:
                                            - Uri
                                            - DevfileRegistry
                                            - Git
                                            type: string
                                          uri:
                                            description: URI Reference of a Dockerfile.
                                              It can be a full URL or a relative URI
                                              from the current devfile as the base
                                              URI.
                                            type: string
                                        type: object
                                      imageName:
                                        description: Name of the image for the resulting
                                          outerloop build
                                        type: string
                                      imageType:
                                        description: Type of image
                                        enum:
                                        - Dockerfile
                                        - AutoBuild
                                        type: string
                                    type: object
                                  kubernetes:
                                    description: Allows importing into the devworkspace
                                      the Kubernetes resources defined in a given
                                      manifest. For example this allows reusing the
                                      Kubernetes definitions used to deploy some runtime
                                      components in production.
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      deployByDefault:
                                        description: "Defines if the component should
                                          be deployed during startup. \n Default value
                                          is `false`"
                                        type: boolean
                                      endpoints:
                                        items:
                                          properties:
                                            annotation:
                                              additionalProperties:
                                                type: string
                                              description: Annotations to be added
                                                to Kubernetes Ingress or Openshift
                                                Route
                                              type: object
                                            attributes:
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main devworkspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main devworkspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              maxLength: 63
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              enum:
                                              - http
                                              - https
                                              - ws
                                              - wss
                                              - tcp
                                              - udp
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process. This
                                                requires a protocol of `https` or
                                                `wss`.
                                              type: boolean
                                            targetPort:
                                              description: Port number to be used
                                                within the container component. The
                                                same port cannot be used by two different
                                                container components.
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      inlined:
                                        description: Inlined manifest
                                        type: string
                                      locationType:
                                        description: Type of Kubernetes-like location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      uri:
                                        description: Location in a file fetched from
                                          a uri.
                                        type: string
                                    type: object
                                  name:
                                    description: Mandatory name that allows referencing
                                      the component from other elements (such as commands)
                                      or from an external devfile that may reference
                                      this component through a parent or a plugin.
                                    maxLength: 63
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  openshift:
                                    description: Allows importing into the devworkspace
                                      the OpenShift resources defined in a given manifest.
                                      For example this allows reusing the OpenShift
                                      definitions used to deploy some runtime components
                                      in production.
                                    oneOf:
                                    - required:
                                      - uri
                                    - required:
                                      - inlined
                                    properties:
                                      deployByDefault:
                                        description: "Defines if the component should
                                          be deployed during startup. \n Default value
                                          is `false`"
                                        type: boolean
                                      endpoints:
                                        items:
                                          properties:
                                            annotation:
                                              additionalProperties:
                                                type: string
                                              description: Annotations to be added
                                                to Kubernetes Ingress or Openshift
                                                Route
                                              type: object
                                            attributes:
                                              description: "Map of implementation-dependant
                                                string-based free-form attributes.
                                                \n Examples of Che-specific attributes:
                                                \n - cookiesAuthEnabled: \"true\"
                                                / \"false\", \n - type: \"terminal\"
                                                / \"ide\" / \"ide-dev\","
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            exposure:
                                              description: "Describes how the endpoint
                                                should be exposed on the network.
                                                \n - `public` means that the endpoint
                                                will be exposed on the public network,
                                                typically through a K8S ingress or
                                                an OpenShift route. \n - `internal`
                                                means that the endpoint will be exposed
                                                internally outside of the main devworkspace
                                                POD, typically by K8S services, to
                                                be consumed by other elements running
                                                on the same cloud internal network.
                                                \n - `none` means that the endpoint
                                                will not be exposed and will only
                                                be accessible inside the main devworkspace
                                                POD, on a local address. \n Default
                                                value is `public`"
                                              enum:
                                              - public
                                              - internal
                                              - none
                                              type: string
                                            name:
                                              maxLength: 63
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                            path:
                                              description: Path of the endpoint URL
                                              type: string
                                            protocol:
                                              description: "Describes the application
                                                and transport protocols of the traffic
                                                that will go through this endpoint.
                                                \n - `http`: Endpoint will have `http`
                                                traffic, typically on a TCP connection.
                                                It will be automaticaly promoted to
                                                `https` when the `secure` field is
                                                set to `true`. \n - `https`: Endpoint
                                                will have `https` traffic, typically
                                                on a TCP connection. \n - `ws`: Endpoint
                                                will have `ws` traffic, typically
                                                on a TCP connection. It will be automaticaly
                                                promoted to `wss` when the `secure`
                                                field is set to `true`. \n - `wss`:
                                                Endpoint will have `wss` traffic,
                                                typically on a TCP connection. \n
                                                - `tcp`: Endpoint will have traffic
                                                on a TCP connection, without specifying
                                                an application protocol. \n - `udp`:
                                                Endpoint will have traffic on an UDP
                                                connection, without specifying an
                                                application protocol. \n Default value
                                                is `http`"
                                              enum:
                                              - http
                                              - https
                                              - ws
                                              - wss
                                              - tcp
                                              - udp
                                              type: string
                                            secure:
                                              description: Describes whether the endpoint
                                                should be secured and protected by
                                                some authentication process. This
                                                requires a protocol of `https` or
                                                `wss`.
                                              type: boolean
                                            targetPort:
                                              description: Port number to be used
                                                within the container component. The
                                                same port cannot be used by two different
                                                container components.
                                              type: integer
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      inlined:
                                        description: Inlined manifest
                                        type: string
                                      locationType:
                                        description: Type of Kubernetes-like location
                                        enum:
                                        - Uri
                                        - Inlined
                                        type: string
                                      uri:
                                        description: Location in a file fetched from
                                          a uri.
                                        type: string
                                    type: object
                                  volume:
                                    description: Allows specifying the definition
                                      of a volume shared by several other components
                                    properties:
                                      ephemeral:
                                        description: Ephemeral volumes are not stored
                                          persistently across restarts. Defaults to
                                          false
                                        type: boolean
                                      size:
                                        description: Size of the volume
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            id:
                              description: Id in a registry that contains a Devfile
                                yaml file
                              type: string
                            importReferenceType:
                              description: type of location from where the referenced
                                template structure should be retrieved
                              enum:
                              - Uri
                              - Id
                              - Kubernetes
                              type: string
                            kubernetes:
                              description: Reference to a Kubernetes CRD of type DevWorkspaceTemplate
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              type: object
                            registryUrl:
                              description: Registry URL to pull the parent devfile
                                from when using id in the parent reference. To ensure
                                the parent devfile gets resolved consistently in different
                                environments, it is recommended to always specify
                                the `registryUrl` when `id` is used.
                              type: string
                            uri:
                              description: URI Reference of a parent devfile YAML
                                file. It can be a full URL or a relative URI with
                                the current devfile as the base URI.
                              type: string
                            version:
                              description: Specific stack/sample version to pull the
                                parent devfile from, when using id in the parent reference.
                                To specify `version`, `id` must be defined and used
                                as the import reference source. `version` can be either
                                a specific stack version, or `latest`. If no `version`
                                specified, default version will be used.
                              pattern: ^(latest)|(([1-9])\.([0-9]+)\.([0-9]+)(\-[0-9a-z-]+(\.[0-9a-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)$
                              type: string
                          type: object
                        volume:
                          description: Allows specifying the definition of a volume
                            shared by several other components
                          properties:
                            ephemeral:
                              description: Ephemeral volumes are not stored persistently
                                across restarts. Defaults to false
                              type: boolean
                            size:
                              description: Size of the volume
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  events:
                    description: Bindings of commands to events. Each command is referred-to
                      by its name.
                    properties:
                      postStart:
                        description: IDs of commands that should be executed after
                          the devworkspace is completely started. In the case of Che-Theia,
                          these commands should be executed after all plugins and
                          extensions have started, including project cloning. This
                          means that those commands are not triggered until the user
                          opens the IDE in his browser.
                        items:
                          type: string
                        type: array
                      postStop:
                        description: IDs of commands that should be executed after
                          stopping the devworkspace.
                        items:
                          type: string
                        type: array
                      preStart:
                        description: IDs of commands that should be executed before
                          the devworkspace start. Kubernetes-wise, these commands
                          would typically be executed in init containers of the devworkspace
                          POD.
                        items:
                          type: string
                        type: array
                      preStop:
                        description: IDs of commands that should be executed before
                          stopping the devworkspace.
                        items:
                          type: string
                        type: array
                    type: object
                  parent:
                    description: Parent devworkspace template
                    oneOf:
                    - required:
                      - uri
                    - required:
                      - id
                    - required:
                      - kubernetes
                    properties:
                      attributes:
                        description: Overrides of attributes encapsulated in a parent
                          devfile. Overriding is done according to K8S strategic merge
                          patch standard rules.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      commands:
                        description: Overrides of commands encapsulated in a parent
                          devfile or a plugin. Overriding is done according to K8S
                          strategic merge patch standard rules.
                        items:
                          oneOf:
                          - required:
                            - exec
                          - required:
                            - apply
                          - required:
                            - composite
                          properties:
                            apply:
                              description: "Command that consists in applying a given
                                component definition, typically bound to a devworkspace
                                event. \n For example, when an `apply` command is
                                bound to a `preStart` event, and references a `container`
                                component, it will start the container as a K8S initContainer
                                in the devworkspace POD, unless the component has
                                its `dedicatedPod` field set to `true`. \n When no
                                `apply` command exist for a given component, it is
                                assumed the component will be applied at devworkspace
                                start by default, unless `deployByDefault` for that
                                component is set to false."
                              properties:
                                component:
                                  description: Describes component that will be applied
                                  type: string
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      - deploy
                                      type: string
                                  type: object
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                              type: object
                            attributes:
                              description: Map of implementation-dependant free-form
                                YAML attributes.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            commandType:
                              description: Type of devworkspace command
                              enum:
                              - Exec
                              - Apply
                              - Composite
                              type: string
                            composite:
                              description: Composite command that allows executing
                                several sub-commands either sequentially or concurrently
                              properties:
                                commands:
                                  description: The commands that comprise this composite
                                    command
                                  items:
                                    type: string
                                  type: array
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      - deploy
                                      type: string
                                  type: object
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                                parallel:
                                  description: Indicates if the sub-commands should
                                    be executed concurrently
                                  type: boolean
                              type: object
                            exec:
                              description: CLI Command executed in an existing component
                                container
                              properties:
                                commandLine:
                                  description: "The actual command-line string \n
                                    Special variables that can be used: \n  - `$PROJECTS_ROOT`:
                                    A path where projects sources are mounted as defined
                                    by container component's sourceMapping. \n  -
                                    `$PROJECT_SOURCE`: A path to a project source
                                    ($PROJECTS_ROOT/<project-name>). If there are
                                    multiple projects, this will point to the directory
                                    of the first one."
                                  type: string
                                component:
                                  description: Describes component to which given
                                    action relates
                                  type: string
                                env:
                                  description: Optional list of environment variables
                                    that have to be set before running the command
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                group:
                                  description: Defines the group this command is part
                                    of
                                  properties:
                                    isDefault:
                                      description: Identifies the default command
                                        for a given group kind
                                      type: boolean
                                    kind:
                                      description: Kind of group the command is part
                                        of
                                      enum:
                                      - build
                                      - run
                                      - test
                                      - debug
                                      - deploy
                                      type: string
                                  type: object
                                hotReloadCapable:
                                  description: "Whether the command is capable to
                                    reload itself when source code changes. If set
                                    to `true` the command won't be restarted and it
                                    is expected to handle file changes on its own.
                                    \n Default value is `false`"
                                  type: boolean
                                label:
                                  description: Optional label that provides a label
                                    for this command to be used in Editor UI menus
                                    for example
                                  type: string
                                workingDir:
                                  description: "Working directory where the command
                                    should be executed \n Special variables that can
                                    be used: \n  - `$PROJECTS_ROOT`: A path where
                                    projects sources are mounted as defined by container
                                    component's sourceMapping. \n  - `$PROJECT_SOURCE`:
                                    A path to a project source ($PROJECTS_ROOT/<project-name>).
                                    If there are multiple projects, this will point
                                    to the directory of the first one."
                                  type: string
                              type: object
                            id:
                              description: Mandatory identifier that allows referencing
                                this command in composite commands, from a parent,
                                or in events.
                              maxLength: 63
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                          - id
                          type: object
                        type: array
                      components:
                        description: Overrides of components encapsulated in a parent
                          devfile or a plugin. Overriding is done according to K8S
                          strategic merge patch standard rules.
                        items:
                          oneOf:
                          - required:
                            - container
                          - required:
                            - kubernetes
                          - required:
                            - openshift
                          - required:
                            - volume
                          - required:
                            - image
                          - required:
                            - plugin
                          properties:
                            attributes:
                              description: Map of implementation-dependant free-form
                                YAML attributes.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            componentType:
                              description: Type of component
                              enum:
                              - Container
                              - Kubernetes
                              - Openshift
                              - Volume
                              - Image
                              - Plugin
                              type: string
                            container:
                              description: Allows adding and configuring devworkspace-related
                                containers
                              properties:
                                annotation:
                                  description: Annotations that should be added to
                                    specific resources for this container
                                  properties:
                                    deployment:
                                      additionalProperties:
                                        type: string
                                      description: Annotations to be added to deployment
                                      type: object
                                    service:
                                      additionalProperties:
                                        type: string
                                      description: Annotations to be added to service
                                      type: object
                                  type: object
                                args:
                                  description: "The arguments to supply to the command
                                    running the dockerimage component. The arguments
                                    are supplied either to the default command provided
                                    in the image or to the overridden command. \n
                                    Defaults to an empty array, meaning use whatever
                                    is defined in the image."
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: "The command to run in the dockerimage
                                    component instead of the default one provided
                                    in the image. \n Defaults to an empty array, meaning
                                    use whatever is defined in the image."
                                  items:
                                    type: string
                                  type: array
                                cpuLimit:
                                  type: string
                                cpuRequest:
                                  type: string
                                dedicatedPod:
                                  description: "Specify if a container should run
                                    in its own separated pod, instead of running as
                                    part of the main development environment pod.
                                    \n Default value is `false`"
                                  type: boolean
                                endpoints:
                                  items:
                                    properties:
                                      annotation:
                                        additionalProperties:
                                          type: string
                                        description: Annotations to be added to Kubernetes
                                          Ingress or Openshift Route
                                        type: object
                                      attributes:
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          devworkspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main devworkspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        enum:
                                        - http
                                        - https
                                        - ws
                                        - wss
                                        - tcp
                                        - udp
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process. This requires a
                                          protocol of `https` or `wss`.
                                        type: boolean
                                      targetPort:
                                        description: Port number to be used within
                                          the container component. The same port cannot
                                          be used by two different container components.
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                env:
                                  description: "Environment variables used in this
                                    container. \n The following variables are reserved
                                    and cannot be overridden via env: \n  - `$PROJECTS_ROOT`
                                    \n  - `$PROJECT_SOURCE`"
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                image:
                                  type: string
                                memoryLimit:
                                  type: string
                                memoryRequest:
                                  type: string
                                mountSources:
                                  description: "Toggles whether or not the project
                                    source code should be mounted in the component.
                                    \n Defaults to true for all component types except
                                    plugins and components that set `dedicatedPod`
                                    to true."
                                  type: boolean
                                sourceMapping:
                                  description: Optional specification of the path
                                    in the container where project sources should
                                    be transferred/mounted when `mountSources` is
                                    `true`. When omitted, the default value of /projects
                                    is used.
                                  type: string
                                volumeMounts:
                                  description: List of volumes mounts that should
                                    be mounted is this container.
                                  items:
                                    description: Volume that should be mounted to
                                      a component container
                                    properties:
                                      name:
                                        description: The volume mount name is the
                                          name of an existing `Volume` component.
                                          If several containers mount the same volume
                                          name then they will reuse the same volume
                                          and will be able to access to the same files.
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      path:
                                        description: The path in the component container
                                          where the volume should be mounted. If not
                                          path is mentioned, default path is the is
                                          `/<name>`.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                              type: object
                            image:
                              description: Allows specifying the definition of an
                                image for outer loop builds
                              oneOf:
                              - required:
                                - dockerfile
                              - required:
                                - autoBuild
                              properties:
                                autoBuild:
                                  description: "Defines if the image should be built
                                    during startup. \n Default value is `false`"
                                  type: boolean
                                dockerfile:
                                  description: Allows specifying dockerfile type build
                                  oneOf:
                                  - required:
                                    - uri
                                  - required:
                                    - devfileRegistry
                                  - required:
                                    - git
                                  properties:
                                    args:
                                      description: The arguments to supply to the
                                        dockerfile build.
                                      items:
                                        type: string
                                      type: array
                                    buildContext:
                                      description: Path of source directory to establish
                                        build context. Defaults to ${PROJECT_SOURCE}
                                        in the container
                                      type: string
                                    devfileRegistry:
                                      description: Dockerfile's Devfile Registry source
                                      properties:
                                        id:
                                          description: Id in a devfile registry that
                                            contains a Dockerfile. The src in the
                                            OCI registry required for the Dockerfile
                                            build will be downloaded for building
                                            the image.
                                          type: string
                                        registryUrl:
                                          description: Devfile Registry URL to pull
                                            the Dockerfile from when using the Devfile
                                            Registry as Dockerfile src. To ensure
                                            the Dockerfile gets resolved consistently
                                            in different environments, it is recommended
                                            to always specify the `devfileRegistryUrl`
                                            when `Id` is used.
                                          type: string
                                      type: object
                                    git:
                                      description: Dockerfile's Git source
                                      properties:
                                        checkoutFrom:
                                          description: Defines from what the project
                                            should be checked out. Required if there
                                            are more than one remote configured
                                          properties:
                                            remote:
                                              description: The remote name should
                                                be used as init. Required if there
                                                are more than one remote configured
                                              type: string
                                            revision:
                                              description: The revision to checkout
                                                from. Should be branch name, tag or
                                                commit id. Default branch is used
                                                if missing or specified revision is
                                                not found.
                                              type: string
                                          type: object
                                        fileLocation:
                                          description: Location of the Dockerfile
                                            in the Git repository when using git as
                                            Dockerfile src. Defaults to Dockerfile.
                                          type: string
                                        remotes:
                                          additionalProperties:
                                            type: string
                                          description: The remotes map which should
                                            be initialized in the git project. Projects
                                            must have at least one remote configured
                                            while StarterProjects & Image Component's
                                            Git source can only have at most one remote
                                            configured.
                                          type: object
                                      type: object
                                    rootRequired:
                                      description: "Specify if a privileged builder
                                        pod is required. \n Default value is `false`"
                                      type: boolean
                                    srcType:
                                      description: Type of Dockerfile src
                                      enum:
                                      - Uri
                                      - DevfileRegistry
                                      - Git
                                      type: string
                                    uri:
                                      description: URI Reference of a Dockerfile.
                                        It can be a full URL or a relative URI from
                                        the current devfile as the base URI.
                                      type: string
                                  type: object
                                imageName:
                                  description: Name of the image for the resulting
                                    outerloop build
                                  type: string
                                imageType:
                                  description: Type of image
                                  enum:
                                  - Dockerfile
                                  - AutoBuild
                                  type: string
                              type: object
                            kubernetes:
                              description: Allows importing into the devworkspace
                                the Kubernetes resources defined in a given manifest.
                                For example this allows reusing the Kubernetes definitions
                                used to deploy some runtime components in production.
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                deployByDefault:
                                  description: "Defines if the component should be
                                    deployed during startup. \n Default value is `false`"
                                  type: boolean
                                endpoints:
                                  items:
                                    properties:
                                      annotation:
                                        additionalProperties:
                                          type: string
                                        description: Annotations to be added to Kubernetes
                                          Ingress or Openshift Route
                                        type: object
                                      attributes:
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          devworkspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main devworkspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        enum:
                                        - http
                                        - https
                                        - ws
                                        - wss
                                        - tcp
                                        - udp
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process. This requires a
                                          protocol of `https` or `wss`.
                                        type: boolean
                                      targetPort:
                                        description: Port number to be used within
                                          the container component. The same port cannot
                                          be used by two different container components.
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                inlined:
                                  description: Inlined manifest
                                  type: string
                                locationType:
                                  description: Type of Kubernetes-like location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                uri:
                                  description: Location in a file fetched from a uri.
                                  type: string
                              type: object
                            name:
                              description: Mandatory name that allows referencing
                                the component from other elements (such as commands)
                                or from an external devfile that may reference this
                                component through a parent or a plugin.
                              maxLength: 63
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            openshift:
                              description: Allows importing into the devworkspace
                                the OpenShift resources defined in a given manifest.
                                For example this allows reusing the OpenShift definitions
                                used to deploy some runtime components in production.
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - inlined
                              properties:
                                deployByDefault:
                                  description: "Defines if the component should be
                                    deployed during startup. \n Default value is `false`"
                                  type: boolean
                                endpoints:
                                  items:
                                    properties:
                                      annotation:
                                        additionalProperties:
                                          type: string
                                        description: Annotations to be added to Kubernetes
                                          Ingress or Openshift Route
                                        type: object
                                      attributes:
                                        description: "Map of implementation-dependant
                                          string-based free-form attributes. \n Examples
                                          of Che-specific attributes: \n - cookiesAuthEnabled:
                                          \"true\" / \"false\", \n - type: \"terminal\"
                                          / \"ide\" / \"ide-dev\","
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      exposure:
                                        description: "Describes how the endpoint should
                                          be exposed on the network. \n - `public`
                                          means that the endpoint will be exposed
                                          on the public network, typically through
                                          a K8S ingress or an OpenShift route. \n
                                          - `internal` means that the endpoint will
                                          be exposed internally outside of the main
                                          devworkspace POD, typically by K8S services,
                                          to be consumed by other elements running
                                          on the same cloud internal network. \n -
                                          `none` means that the endpoint will not
                                          be exposed and will only be accessible inside
                                          the main devworkspace POD, on a local address.
                                          \n Default value is `public`"
                                        enum:
                                        - public
                                        - internal
                                        - none
                                        type: string
                                      name:
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      path:
                                        description: Path of the endpoint URL
                                        type: string
                                      protocol:
                                        description: "Describes the application and
                                          transport protocols of the traffic that
                                          will go through this endpoint. \n - `http`:
                                          Endpoint will have `http` traffic, typically
                                          on a TCP connection. It will be automaticaly
                                          promoted to `https` when the `secure` field
                                          is set to `true`. \n - `https`: Endpoint
                                          will have `https` traffic, typically on
                                          a TCP connection. \n - `ws`: Endpoint will
                                          have `ws` traffic, typically on a TCP connection.
                                          It will be automaticaly promoted to `wss`
                                          when the `secure` field is set to `true`.
                                          \n - `wss`: Endpoint will have `wss` traffic,
                                          typically on a TCP connection. \n - `tcp`:
                                          Endpoint will have traffic on a TCP connection,
                                          without specifying an application protocol.
                                          \n - `udp`: Endpoint will have traffic on
                                          an UDP connection, without specifying an
                                          application protocol. \n Default value is
                                          `http`"
                                        enum:
                                        - http
                                        - https
                                        - ws
                                        - wss
                                        - tcp
                                        - udp
                                        type: string
                                      secure:
                                        description: Describes whether the endpoint
                                          should be secured and protected by some
                                          authentication process. This requires a
                                          protocol of `https` or `wss`.
                                        type: boolean
                                      targetPort:
                                        description: Port number to be used within
                                          the container component. The same port cannot
                                          be used by two different container components.
                                        type: integer
                                    required:
                                    - name
                                    type: object
                                  type: array
                                inlined:
                                  description: Inlined manifest
                                  type: string
                                locationType:
                                  description: Type of Kubernetes-like location
                                  enum:
                                  - Uri
                                  - Inlined
                                  type: string
                                uri:
                                  description: Location in a file fetched from a uri.
                                  type: string
                              type: object
                            plugin:
                              description: "Allows importing a plugin. \n Plugins
                                are mainly imported devfiles that contribute components,
                                commands and events as a consistent single unit. They
                                are defined in either YAML files following the devfile
                                syntax, or as `DevWorkspaceTemplate` Kubernetes Custom
                                Resources"
                              oneOf:
                              - required:
                                - uri
                              - required:
                                - id
                              - required:
                                - kubernetes
                              properties:
                                commands:
                                  description: Overrides of commands encapsulated
                                    in a parent devfile or a plugin. Overriding is
                                    done according to K8S strategic merge patch standard
                                    rules.
                                  items:
                                    oneOf:
                                    - required:
                                      - exec
                                    - required:
                                      - apply
                                    - required:
                                      - composite
                                    properties:
                                      apply:
                                        description: "Command that consists in applying
                                          a given component definition, typically
                                          bound to a devworkspace event. \n For example,
                                          when an `apply` command is bound to a `preStart`
                                          event, and references a `container` component,
                                          it will start the container as a K8S initContainer
                                          in the devworkspace POD, unless the component
                                          has its `dedicatedPod` field set to `true`.
                                          \n When no `apply` command exist for a given
                                          component, it is assumed the component will
                                          be applied at devworkspace start by default,
                                          unless `deployByDefault` for that component
                                          is set to false."
                                        properties:
                                          component:
                                            description: Describes component that
                                              will be applied
                                            type: string
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                - deploy
                                                type: string
                                            type: object
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                        type: object
                                      attributes:
                                        description: Map of implementation-dependant
                                          free-form YAML attributes.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      commandType:
                                        description: Type of devworkspace command
                                        enum:
                                        - Exec
                                        - Apply
                                        - Composite
                                        type: string
                                      composite:
                                        description: Composite command that allows
                                          executing several sub-commands either sequentially
                                          or concurrently
                                        properties:
                                          commands:
                                            description: The commands that comprise
                                              this composite command
                                            items:
                                              type: string
                                            type: array
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                - deploy
                                                type: string
                                            type: object
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                          parallel:
                                            description: Indicates if the sub-commands
                                              should be executed concurrently
                                            type: boolean
                                        type: object
                                      exec:
                                        description: CLI Command executed in an existing
                                          component container
                                        properties:
                                          commandLine:
                                            description: "The actual command-line
                                              string \n Special variables that can
                                              be used: \n  - `$PROJECTS_ROOT`: A path
                                              where projects sources are mounted as
                                              defined by container component's sourceMapping.
                                              \n  - `$PROJECT_SOURCE`: A path to a
                                              project source ($PROJECTS_ROOT/<project-name>).
                                              If there are multiple projects, this
                                              will point to the directory of the first
                                              one."
                                            type: string
                                          component:
                                            description: Describes component to which
                                              given action relates
                                            type: string
                                          env:
                                            description: Optional list of environment
                                              variables that have to be set before
                                              running the command
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          group:
                                            description: Defines the group this command
                                              is part of
                                            properties:
                                              isDefault:
                                                description: Identifies the default
                                                  command for a given group kind
                                                type: boolean
                                              kind:
                                                description: Kind of group the command
                                                  is part of
                                                enum:
                                                - build
                                                - run
                                                - test
                                                - debug
                                                - deploy
                                                type: string
                                            type: object
                                          hotReloadCapable:
                                            description: "Whether the command is capable
                                              to reload itself when source code changes.
                                              If set to `true` the command won't be
                                              restarted and it is expected to handle
                                              file changes on its own. \n Default
                                              value is `false`"
                                            type: boolean
                                          label:
                                            description: Optional label that provides
                                              a label for this command to be used
                                              in Editor UI menus for example
                                            type: string
                                          workingDir:
                                            description: "Working directory where
                                              the command should be executed \n Special
                                              variables that can be used: \n  - `$PROJECTS_ROOT`:
                                              A path where projects sources are mounted
                                              as defined by container component's
                                              sourceMapping. \n  - `$PROJECT_SOURCE`:
                                              A path to a project source ($PROJECTS_ROOT/<project-name>).
                                              If there are multiple projects, this
                                              will point to the directory of the first
                                              one."
                                            type: string
                                        type: object
                                      id:
                                        description: Mandatory identifier that allows
                                          referencing this command in composite commands,
                                          from a parent, or in events.
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  type: array
                                components:
                                  description: Overrides of components encapsulated
                                    in a parent devfile or a plugin. Overriding is
                                    done according to K8S strategic merge patch standard
                                    rules.
                                  items:
                                    oneOf:
                                    - required:
                                      - container
                                    - required:
                                      - kubernetes
                                    - required:
                                      - openshift
                                    - required:
                                      - volume
                                    - required:
                                      - image
                                    properties:
                                      attributes:
                                        description: Map of implementation-dependant
                                          free-form YAML attributes.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      componentType:
                                        description: Type of component
                                        enum:
                                        - Container
                                        - Kubernetes
                                        - Openshift
                                        - Volume
                                        - Image
                                        type: string
                                      container:
                                        description: Allows adding and configuring
                                          devworkspace-related containers
                                        properties:
                                          annotation:
                                            description: Annotations that should be
                                              added to specific resources for this
                                              container
                                            properties:
                                              deployment:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations to be added
                                                  to deployment
                                                type: object
                                              service:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations to be added
                                                  to service
                                                type: object
                                            type: object
                                          args:
                                            description: "The arguments to supply
                                              to the command running the dockerimage
                                              component. The arguments are supplied
                                              either to the default command provided
                                              in the image or to the overridden command.
                                              \n Defaults to an empty array, meaning
                                              use whatever is defined in the image."
                                            items:
                                              type: string
                                            type: array
                                          command:
                                            description: "The command to run in the
                                              dockerimage component instead of the
                                              default one provided in the image. \n
                                              Defaults to an empty array, meaning
                                              use whatever is defined in the image."
                                            items:
                                              type: string
                                            type: array
                                          cpuLimit:
                                            type: string
                                          cpuRequest:
                                            type: string
                                          dedicatedPod:
                                            description: "Specify if a container should
                                              run in its own separated pod, instead
                                              of running as part of the main development
                                              environment pod. \n Default value is
                                              `false`"
                                            type: boolean
                                          endpoints:
                                            items:
                                              properties:
                                                annotation:
                                                  additionalProperties:
                                                    type: string
                                                  description: Annotations to be added
                                                    to Kubernetes Ingress or Openshift
                                                    Route
                                                  type: object
                                                attributes:
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                  x-kubernetes-preserve-unknown-fields: true
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main devworkspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main devworkspace POD, on
                                                    a local address. \n Default value
                                                    is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  maxLength: 63
                                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  enum:
                                                  - http
                                                  - https
                                                  - ws
                                                  - wss
                                                  - tcp
                                                  - udp
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process. This requires a protocol
                                                    of `https` or `wss`.
                                                  type: boolean
                                                targetPort:
                                                  description: Port number to be used
                                                    within the container component.
                                                    The same port cannot be used by
                                                    two different container components.
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          env:
                                            description: "Environment variables used
                                              in this container. \n The following
                                              variables are reserved and cannot be
                                              overridden via env: \n  - `$PROJECTS_ROOT`
                                              \n  - `$PROJECT_SOURCE`"
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          image:
                                            type: string
                                          memoryLimit:
                                            type: string
                                          memoryRequest:
                                            type: string
                                          mountSources:
                                            description: "Toggles whether or not the
                                              project source code should be mounted
                                              in the component. \n Defaults to true
                                              for all component types except plugins
                                              and components that set `dedicatedPod`
                                              to true."
                                            type: boolean
                                          sourceMapping:
                                            description: Optional specification of
                                              the path in the container where project
                                              sources should be transferred/mounted
                                              when `mountSources` is `true`. When
                                              omitted, the default value of /projects
                                              is used.
                                            type: string
                                          volumeMounts:
                                            description: List of volumes mounts that
                                              should be mounted is this container.
                                            items:
                                              description: Volume that should be mounted
                                                to a component container
                                              properties:
                                                name:
                                                  description: The volume mount name
                                                    is the name of an existing `Volume`
                                                    component. If several containers
                                                    mount the same volume name then
                                                    they will reuse the same volume
                                                    and will be able to access to
                                                    the same files.
                                                  maxLength: 63
                                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                  type: string
                                                path:
                                                  description: The path in the component
                                                    container where the volume should
                                                    be mounted. If not path is mentioned,
                                                    default path is the is `/<name>`.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        type: object
                                      image:
                                        description: Allows specifying the definition
                                          of an image for outer loop builds
                                        oneOf:
                                        - required:
                                          - dockerfile
                                        - required:
                                          - autoBuild
                                        properties:
                                          autoBuild:
                                            description: "Defines if the image should
                                              be built during startup. \n Default
                                              value is `false`"
                                            type: boolean
                                          dockerfile:
                                            description: Allows specifying dockerfile
                                              type build
                                            oneOf:
                                            - required:
                                              - uri
                                            - required:
                                              - devfileRegistry
                                            - required:
                                              - git
                                            properties:
                                              args:
                                                description: The arguments to supply
                                                  to the dockerfile build.
                                                items:
                                                  type: string
                                                type: array
                                              buildContext:
                                                description: Path of source directory
                                                  to establish build context. Defaults
                                                  to ${PROJECT_SOURCE} in the container
                                                type: string
                                              devfileRegistry:
                                                description: Dockerfile's Devfile
                                                  Registry source
                                                properties:
                                                  id:
                                                    description: Id in a devfile registry
                                                      that contains a Dockerfile.
                                                      The src in the OCI registry
                                                      required for the Dockerfile
                                                      build will be downloaded for
                                                      building the image.
                                                    type: string
                                                  registryUrl:
                                                    description: Devfile Registry
                                                      URL to pull the Dockerfile from
                                                      when using the Devfile Registry
                                                      as Dockerfile src. To ensure
                                                      the Dockerfile gets resolved
                                                      consistently in different environments,
                                                      it is recommended to always
                                                      specify the `devfileRegistryUrl`
                                                      when `Id` is used.
                                                    type: string
                                                type: object
                                              git:
                                                description: Dockerfile's Git source
                                                properties:
                                                  checkoutFrom:
                                                    description: Defines from what
                                                      the project should be checked
                                                      out. Required if there are more
                                                      than one remote configured
                                                    properties:
                                                      remote:
                                                        description: The remote name
                                                          should be used as init.
                                                          Required if there are more
                                                          than one remote configured
                                                        type: string
                                                      revision:
                                                        description: The revision
                                                          to checkout from. Should
                                                          be branch name, tag or commit
                                                          id. Default branch is used
                                                          if missing or specified
                                                          revision is not found.
                                                        type: string
                                                    type: object
                                                  fileLocation:
                                                    description: Location of the Dockerfile
                                                      in the Git repository when using
                                                      git as Dockerfile src. Defaults
                                                      to Dockerfile.
                                                    type: string
                                                  remotes:
                                                    additionalProperties:
                                                      type: string
                                                    description: The remotes map which
                                                      should be initialized in the
                                                      git project. Projects must have
                                                      at least one remote configured
                                                      while StarterProjects & Image
                                                      Component's Git source can only
                                                      have at most one remote configured.
                                                    type: object
                                                type: object
                                              rootRequired:
                                                description: "Specify if a privileged
                                                  builder pod is required. \n Default
                                                  value is `false`"
                                                type: boolean
                                              srcType:
                                                description: Type of Dockerfile src
                                                enum:
                                                - Uri
                                                - DevfileRegistry
                                                - Git
                                                type: string
                                              uri:
                                                description: URI Reference of a Dockerfile.
                                                  It can be a full URL or a relative
                                                  URI from the current devfile as
                                                  the base URI.
                                                type: string
                                            type: object
                                          imageName:
                                            description: Name of the image for the
                                              resulting outerloop build
                                            type: string
                                          imageType:
                                            description: Type of image
                                            enum:
                                            - Dockerfile
                                            - AutoBuild
                                            type: string
                                        type: object
                                      kubernetes:
                                        description: Allows importing into the devworkspace
                                          the Kubernetes resources defined in a given
                                          manifest. For example this allows reusing
                                          the Kubernetes definitions used to deploy
                                          some runtime components in production.
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          deployByDefault:
                                            description: "Defines if the component
                                              should be deployed during startup. \n
                                              Default value is `false`"
                                            type: boolean
                                          endpoints:
                                            items:
                                              properties:
                                                annotation:
                                                  additionalProperties:
                                                    type: string
                                                  description: Annotations to be added
                                                    to Kubernetes Ingress or Openshift
                                                    Route
                                                  type: object
                                                attributes:
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                  x-kubernetes-preserve-unknown-fields: true
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main devworkspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main devworkspace POD, on
                                                    a local address. \n Default value
                                                    is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  maxLength: 63
                                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  enum:
                                                  - http
                                                  - https
                                                  - ws
                                                  - wss
                                                  - tcp
                                                  - udp
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process. This requires a protocol
                                                    of `https` or `wss`.
                                                  type: boolean
                                                targetPort:
                                                  description: Port number to be used
                                                    within the container component.
                                                    The same port cannot be used by
                                                    two different container components.
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          inlined:
                                            description: Inlined manifest
                                            type: string
                                          locationType:
                                            description: Type of Kubernetes-like location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          uri:
                                            description: Location in a file fetched
                                              from a uri.
                                            type: string
                                        type: object
                                      name:
                                        description: Mandatory name that allows referencing
                                          the component from other elements (such
                                          as commands) or from an external devfile
                                          that may reference this component through
                                          a parent or a plugin.
                                        maxLength: 63
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                      openshift:
                                        description: Allows importing into the devworkspace
                                          the OpenShift resources defined in a given
                                          manifest. For example this allows reusing
                                          the OpenShift definitions used to deploy
                                          some runtime components in production.
                                        oneOf:
                                        - required:
                                          - uri
                                        - required:
                                          - inlined
                                        properties:
                                          deployByDefault:
                                            description: "Defines if the component
                                              should be deployed during startup. \n
                                              Default value is `false`"
                                            type: boolean
                                          endpoints:
                                            items:
                                              properties:
                                                annotation:
                                                  additionalProperties:
                                                    type: string
                                                  description: Annotations to be added
                                                    to Kubernetes Ingress or Openshift
                                                    Route
                                                  type: object
                                                attributes:
                                                  description: "Map of implementation-dependant
                                                    string-based free-form attributes.
                                                    \n Examples of Che-specific attributes:
                                                    \n - cookiesAuthEnabled: \"true\"
                                                    / \"false\", \n - type: \"terminal\"
                                                    / \"ide\" / \"ide-dev\","
                                                  type: object
                                                  x-kubernetes-preserve-unknown-fields: true
                                                exposure:
                                                  description: "Describes how the
                                                    endpoint should be exposed on
                                                    the network. \n - `public` means
                                                    that the endpoint will be exposed
                                                    on the public network, typically
                                                    through a K8S ingress or an OpenShift
                                                    route. \n - `internal` means that
                                                    the endpoint will be exposed internally
                                                    outside of the main devworkspace
                                                    POD, typically by K8S services,
                                                    to be consumed by other elements
                                                    running on the same cloud internal
                                                    network. \n - `none` means that
                                                    the endpoint will not be exposed
                                                    and will only be accessible inside
                                                    the main devworkspace POD, on
                                                    a local address. \n Default value
                                                    is `public`"
                                                  enum:
                                                  - public
                                                  - internal
                                                  - none
                                                  type: string
                                                name:
                                                  maxLength: 63
                                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                  type: string
                                                path:
                                                  description: Path of the endpoint
                                                    URL
                                                  type: string
                                                protocol:
                                                  description: "Describes the application
                                                    and transport protocols of the
                                                    traffic that will go through this
                                                    endpoint. \n - `http`: Endpoint
                                                    will have `http` traffic, typically
                                                    on a TCP connection. It will be
                                                    automaticaly promoted to `https`
                                                    when the `secure` field is set
                                                    to `true`. \n - `https`: Endpoint
                                                    will have `https` traffic, typically
                                                    on a TCP connection. \n - `ws`:
                                                    Endpoint will have `ws` traffic,
                                                    typically on a TCP connection.
                                                    It will be automaticaly promoted
                                                    to `wss` when the `secure` field
                                                    is set to `true`. \n - `wss`:
                                                    Endpoint will have `wss` traffic,
                                                    typically on a TCP connection.
                                                    \n - `tcp`: Endpoint will have
                                                    traffic on a TCP connection, without
                                                    specifying an application protocol.
                                                    \n - `udp`: Endpoint will have
                                                    traffic on an UDP connection,
                                                    without specifying an application
                                                    protocol. \n Default value is
                                                    `http`"
                                                  enum:
                                                  - http
                                                  - https
                                                  - ws
                                                  - wss
                                                  - tcp
                                                  - udp
                                                  type: string
                                                secure:
                                                  description: Describes whether the
                                                    endpoint should be secured and
                                                    protected by some authentication
                                                    process. This requires a protocol
                                                    of `https` or `wss`.
                                                  type: boolean
                                                targetPort:
                                                  description: Port number to be used
                                                    within the container component.
                                                    The same port cannot be used by
                                                    two different container components.
                                                  type: integer
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          inlined:
                                            description: Inlined manifest
                                            type: string
                                          locationType:
                                            description: Type of Kubernetes-like location
                                            enum:
                                            - Uri
                                            - Inlined
                                            type: string
                                          uri:
                                            description: Location in a file fetched
                                              from a uri.
                                            type: string
                                        type: object
                                      volume:
                                        description: Allows specifying the definition
                                          of a volume shared by several other components
                                        properties:
                                          ephemeral:
                                            description: Ephemeral volumes are not
                                              stored persistently across restarts.
                                              Defaults to false
                                            type: boolean
                                          size:
                                            description: Size of the volume
                                            type: string
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                id:
                                  description: Id in a registry that contains a Devfile
                                    yaml file
                                  type: string
                                importReferenceType:
                                  description: type of location from where the referenced
                                    template structure should be retrieved
                                  enum:
                                  - Uri
                                  - Id
                                  - Kubernetes
                                  type: string
                                kubernetes:
                                  description: Reference to a Kubernetes CRD of type
                                    DevWorkspaceTemplate
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                                registryUrl:
                                  description: Registry URL to pull the parent devfile
                                    from when using id in the parent reference. To
                                    ensure the parent devfile gets resolved consistently
                                    in different environments, it is recommended to
                                    always specify the `registryUrl` when `id` is
                                    used.
                                  type: string
                                uri:
                                  description: URI Reference of a parent devfile YAML
                                    file. It can be a full URL or a relative URI with
                                    the current devfile as the base URI.
                                  type: string
                                version:
                                  description: Specific stack/sample version to pull
                                    the parent devfile from, when using id in the
                                    parent reference. To specify `version`, `id` must
                                    be defined and used as the import reference source.
                                    `version` can be either a specific stack version,
                                    or `latest`. If no `version` specified, default
                                    version will be used.
                                  pattern: ^(latest)|(([1-9])\.([0-9]+)\.([0-9]+)(\-[0-9a-z-]+(\.[0-9a-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)$
                                  type: string
                              type: object
                            volume:
                              description: Allows specifying the definition of a volume
                                shared by several other components
                              properties:
                                ephemeral:
                                  description: Ephemeral volumes are not stored persistently
                                    across restarts. Defaults to false
                                  type: boolean
                                size:
                                  description: Size of the volume
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      id:
                        description: Id in a registry that contains a Devfile yaml
                          file
                        type: string
                      importReferenceType:
                        description: type of location from where the referenced template
                          structure should be retrieved
                        enum:
                        - Uri
                        - Id
                        - Kubernetes
                        type: string
                      kubernetes:
                        description: Reference to a Kubernetes CRD of type DevWorkspaceTemplate
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                      projects:
                        description: Overrides of projects encapsulated in a parent
                          devfile. Overriding is done according to K8S strategic merge
                          patch standard rules.
                        items:
                          oneOf:
                          - required:
                            - git
                          - required:
                            - zip
                          properties:
                            attributes:
                              description: Map of implementation-dependant free-form
                                YAML attributes.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            clonePath:
                              description: Path relative to the root of the projects
                                to which this project should be cloned into. This
                                is a unix-style relative path (i.e. uses forward slashes).
                                The path is invalid if it is absolute or tries to
                                escape the project root through the usage of '..'.
                                If not specified, defaults to the project name.
                              type: string
                            git:
                              description: Project's Git source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Projects must have at least
                                    one remote configured while StarterProjects &
                                    Image Component's Git source can only have at
                                    most one remote configured.
                                  type: object
                              type: object
                            name:
                              description: Project name
                              maxLength: 63
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            sourceType:
                              description: Type of project source
                              enum:
                              - Git
                              - Zip
                              type: string
                            zip:
                              description: Project's Zip source
                              properties:
                                location:
                                  description: Zip project's source location address.
                                    Should be file path of the archive, e.g. file://$FILE_PATH
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      registryUrl:
                        description: Registry URL to pull the parent devfile from
                          when using id in the parent reference. To ensure the parent
                          devfile gets resolved consistently in different environments,
                          it is recommended to always specify the `registryUrl` when
                          `id` is used.
                        type: string
                      starterProjects:
                        description: Overrides of starterProjects encapsulated in
                          a parent devfile. Overriding is done according to K8S strategic
                          merge patch standard rules.
                        items:
                          oneOf:
                          - required:
                            - git
                          - required:
                            - zip
                          properties:
                            attributes:
                              description: Map of implementation-dependant free-form
                                YAML attributes.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description:
                              description: Description of a starter project
                              type: string
                            git:
                              description: Project's Git source
                              properties:
                                checkoutFrom:
                                  description: Defines from what the project should
                                    be checked out. Required if there are more than
                                    one remote configured
                                  properties:
                                    remote:
                                      description: The remote name should be used
                                        as init. Required if there are more than one
                                        remote configured
                                      type: string
                                    revision:
                                      description: The revision to checkout from.
                                        Should be branch name, tag or commit id. Default
                                        branch is used if missing or specified revision
                                        is not found.
                                      type: string
                                  type: object
                                remotes:
                                  additionalProperties:
                                    type: string
                                  description: The remotes map which should be initialized
                                    in the git project. Projects must have at least
                                    one remote configured while StarterProjects &
                                    Image Component's Git source can only have at
                                    most one remote configured.
                                  type: object
                              type: object
                            name:
                              description: Project name
                              maxLength: 63
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            sourceType:
                              description: Type of project source
                              enum:
                              - Git
                              - Zip
                              type: string
                            subDir:
                              description: Sub-directory from a starter project to
                                be used as root for starter project.
                              type: string
                            zip:
                              description: Project's Zip source
                              properties:
                                location:
                                  description: Zip project's source location address.
                                    Should be file path of the archive, e.g. file://$FILE_PATH
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      uri:
                        description: URI Reference of a parent devfile YAML file.
                          It can be a full URL or a relative URI with the current
                          devfile as the base URI.
                        type: string
                      variables:
                        additionalProperties:
                          type: string
                        description: Overrides of variables encapsulated in a parent
                          devfile. Overriding is done according to K8S strategic merge
                          patch standard rules.
                        type: object
                      version:
                        description: Specific stack/sample version to pull the parent
                          devfile from, when using id in the parent reference. To
                          specify `version`, `id` must be defined and used as the
                          import reference source. `version` can be either a specific
                          stack version, or `latest`. If no `version` specified, default
                          version will be used.
                        pattern: ^(latest)|(([1-9])\.([0-9]+)\.([0-9]+)(\-[0-9a-z-]+(\.[0-9a-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)$
                        type: string
                    type: object
                  projects:
                    description: Projects worked on in the devworkspace, containing
                      names and sources locations
                    items:
                      oneOf:
                      - required:
                        - git
                      - required:
                        - zip
                      - required:
                        - custom
                      properties:
                        attributes:
                          description: Map of implementation-dependant free-form YAML
                            attributes.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        clonePath:
                          description: Path relative to the root of the projects to
                            which this project should be cloned into. This is a unix-style
                            relative path (i.e. uses forward slashes). The path is
                            invalid if it is absolute or tries to escape the project
                            root through the usage of '..'. If not specified, defaults
                            to the project name.
                          type: string
                        custom:
                          description: Project's Custom source
                          properties:
                            embeddedResource:
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            projectSourceClass:
                              type: string
                          required:
                          - embeddedResource
                          - projectSourceClass
                          type: object
                        git:
                          description: Project's Git source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Projects must have at least one
                                remote configured while StarterProjects & Image Component's
                                Git source can only have at most one remote configured.
                              type: object
                          required:
                          - remotes
                          type: object
                        name:
                          description: Project name
                          maxLength: 63
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sourceType:
                          description: Type of project source
                          enum:
                          - Git
                          - Zip
                          - Custom
                          type: string
                        zip:
                          description: Project's Zip source
                          properties:
                            location:
                              description: Zip project's source location address.
                                Should be file path of the archive, e.g. file://$FILE_PATH
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  starterProjects:
                    description: StarterProjects is a project that can be used as
                      a starting point when bootstrapping new projects
                    items:
                      oneOf:
                      - required:
                        - git
                      - required:
                        - zip
                      - required:
                        - custom
                      properties:
                        attributes:
                          description: Map of implementation-dependant free-form YAML
                            attributes.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        custom:
                          description: Project's Custom source
                          properties:
                            embeddedResource:
                              type: object
                              x-kubernetes-embedded-resource: true
                              x-kubernetes-preserve-unknown-fields: true
                            projectSourceClass:
                              type: string
                          required:
                          - embeddedResource
                          - projectSourceClass
                          type: object
                        description:
                          description: Description of a starter project
                          type: string
                        git:
                          description: Project's Git source
                          properties:
                            checkoutFrom:
                              description: Defines from what the project should be
                                checked out. Required if there are more than one remote
                                configured
                              properties:
                                remote:
                                  description: The remote name should be used as init.
                                    Required if there are more than one remote configured
                                  type: string
                                revision:
                                  description: The revision to checkout from. Should
                                    be branch name, tag or commit id. Default branch
                                    is used if missing or specified revision is not
                                    found.
                                  type: string
                              type: object
                            remotes:
                              additionalProperties:
                                type: string
                              description: The remotes map which should be initialized
                                in the git project. Projects must have at least one
                                remote configured while StarterProjects & Image Component's
                                Git source can only have at most one remote configured.
                              type: object
                          required:
                          - remotes
                          type: object
                        name:
                          description: Project name
                          maxLength: 63
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sourceType:
                          description: Type of project source
                          enum:
                          - Git
                          - Zip
                          - Custom
                          type: string
                        subDir:
                          description: Sub-directory from a starter project to be
                            used as root for starter project.
                          type: string
                        zip:
                          description: Project's Zip source
                          properties:
                            location:
                              description: Zip project's source location address.
                                Should be file path of the archive, e.g. file://$FILE_PATH
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  variables:
                    additionalProperties:
                      type: string
                    description: "Map of key-value variables used for string replacement
                      in the devfile. Values can be referenced via {{variable-key}}
                      to replace the corresponding value in string fields in the devfile.
                      Replacement cannot be used for \n  - schemaVersion, metadata,
                      parent source \n  - element identifiers, e.g. command id, component
                      name, endpoint name, project name \n  - references to identifiers,
                      e.g. in events, a command's component, container's volume mount
                      name \n  - string enums, e.g. command group kind, endpoint exposure"
                    type: object
                type: object
            required:
            - started
            type: object
          status:
            description: DevWorkspaceStatus defines the observed state of DevWorkspace
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: DevWorkspaceCondition contains details for the current
                    condition of this devworkspace.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Phase is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              devworkspaceId:
                description: Id of the DevWorkspace
                type: string
              mainUrl:
                description: Main URL for this DevWorkspace
                type: string
              message:
                description: Message is a short user-readable message giving additional
                  information about an object's state
                type: string
              phase:
                type: string
            required:
            - devworkspaceId
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
