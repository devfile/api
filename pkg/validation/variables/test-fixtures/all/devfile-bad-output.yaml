variables:
  devnull: /dev/null
projects:
- name: project1
  clonePath: "{{path}}"
  git:
    checkoutFrom:
      revision: "{{tag}}"
    remotes:
      "{{dir}}": "{{version1}}/dev/null-/dev/null"
      "{{version}}": "test"
- name: project2
  zip:
    location: "{{tag}}"
starterProjects:
- name: starterproject1
  description: "{{desc}}"
  subDir: "{{dir}}"
  git:
    checkoutFrom:
      revision: "{{tag}}"
    remotes:
      "{{tag}}": "/dev/null"
      "{{dir}}": "test"
- name: starterproject2
  zip:
    location: "{{tag}}"
dependentProjects:
- name: dependentproject1
  clonePath: "{{path}}"
  git:
    checkoutFrom:
      revision: "{{tag}}"
    remotes:
      "{{dir}}": "{{version1}}/dev/null-/dev/null"
      "{{version}}": "test"
- name: dependentproject2
  zip:
    location: "{{tag}}"
components:
- name: component1
  container:
    image: "{{a}}"
    env:
      - name: BAR
        value: "{{b}}"
      - name: "{{c}}"
        value: "{{bar}}"
    command:
      - tail
      - -f
      - "{{b}}"
      - "{{c}}"
- name: component2
  kubernetes:
    inlined: "{{foo}}"
    endpoints:
      - name: endpoint1
        exposure: "public"
        protocol: "https"
        path : "/{{x}}}"
        targetPort: 9998
      - name: endpoint2
        path : "{{bar}}"
        targetPort: 9999
- name: component3
  volume:
    size: "{{xyz}}"
- name: component4
  openshift:
    uri: "{{foo}}"
- name: component5
  image:
    imageName: "myimage:{{ tag }}"
    dockerfile:
      uri: "{{foo}}/Dockerfile"
      buildContext: /{{foo}}/{{foo}}
      args:
        - "-f"
        - "/dev/null"
commands:
- id: command1
  exec:
    commandLine: "test-{{tag}}"
    env:
      - name: tag
        value: "{{tag}}"
      - name: FOO
        value: "{{BAR}}"
- id: command2
  composite:
    commands:
      - xyz
      - command1
    label: "{{abc}}"
- id: command3
  apply:
    label: "{{abc}}"
